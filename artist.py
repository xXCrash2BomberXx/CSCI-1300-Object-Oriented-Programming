from cs1graphics import Canvas, Circle, Polygon, Rectangle, Path, Text, Point
from math import sin, cos, pi
from random import randrange, random
from time import sleep


def points(sides, x=0, y=0, radius=1, radians=0, degrees=False):
    radians = radians if not degrees else radians*pi/180
    return [Point(radius*cos(2*pi*side/sides+radians)+x, radius*sin(2*pi*side/sides+radians)+y) for side in range(sides)]


def grass(space, x1, y1, x2, y2):
    return [Point(x, y1+(y2-y1)*sin(pi*(x*space+0.5))) for x in range(x1, x2)]


canvas = Canvas(500, 500)
canvas.setBackgroundColor((127, 127, 0))
canvas.setTitle("Lion King")

ground = Rectangle(500, 200, Point(250, 450))
ground.setDepth(5)
ground.setFillColor((64, 64, 0))
canvas.add(ground)

sun = Circle(50, Point(250, 500))
sun.setBorderColor((255, 127, 0))
sun.setBorderWidth(15)
sun.setFillColor((255, 255, 0))
sun.setDepth(6)
canvas.add(sun)

message = "Nants ingonyama bagithi Baba"
fontSize = 18
text = Text(message, fontSize, Point(300, 200))
text.setFontColor((0, 0, 0))
text.setDepth(0)
canvas.add(text)

leaves = [Circle(randrange(10, 25), Point(randrange(50, 150), randrange(350, 400))) for i in range(15)]
for i in leaves:
    i.setBorderColor((64, 32, 32))
    i.setBorderWidth(10)
    i.setFillColor((127, 64, 64))
    i.setDepth(3)
    canvas.add(i)

while sun.getReferencePoint().getY() != 100:
    if sun.getReferencePoint().getY() == 300:
        canvas.remove(text)
        message = "(Sithi uhm ingonyama)"
        fontSize = 18
        text = Text(message, fontSize, Point(300, 200))
        text.setFontColor((0, 0, 0))
        text.setDepth(0)
        canvas.add(text)
    sun.move(0, -10)
    sleep(0.1)

canvas.remove(text)
message = "yeah, ingonyama"
fontSize = 18
text = Text(message, fontSize, Point(300, 200))
text.setFontColor((0, 0, 0))
text.setDepth(0)
canvas.add(text)

sleep(1.5)
canvas.clear()

message = "Nants ingonyama bagithi baba"
fontSize = 18
text = Text(message, fontSize, Point(300, 200))
text.setFontColor((0, 0, 0))
text.setDepth(0)
canvas.add(text)

rhinoObj = []
rhino = [[None, None, None, None, None, None, (10, 10, 9), (58, 57, 57), (104, 104, 103), (154, 153, 153), (163, 163, 163), (114, 114, 113), (79, 79, 79), (77, 76, 76), (86, 86, 86), (100, 100, 99), (109, 109, 109), (117, 116, 116), (117, 116, 116), (114, 113, 113), (107, 107, 106), (90, 90, 89), (64, 64, 64), (55, 55, 54), (101, 101, 100), (143, 142, 141), (165, 165, 164), (161, 160, 160), (113, 113, 112), (38, 38, 38), (2, 2, 2), None, None, None, None, (18, 18, 17), (23, 23, 23), (1, 1, 1), (0, 0, 0), None, None, None, None, None, None, None], [None, None, None, None, (6, 6, 6), (52, 51, 51), (128, 127, 126), (174, 173, 172), (176, 176, 175), (163, 162, 161), (180, 179, 178), (165, 165, 164), (174, 173, 173), (180, 180, 179), (181, 180, 179), (182, 181, 180), (182, 181, 180), (182, 181, 180), (182, 181, 180), (182, 181, 180), (182, 181, 180), (181, 180, 179), (178, 177, 176), (165, 164, 163), (166, 165, 164), (182, 181, 179), (182, 180, 179), (182, 180, 179), (180, 179, 178), (162, 161, 159), (102, 101, 100), (34, 33, 33), (3, 3, 3), None, (16, 16, 16), (83, 81, 80), (46, 45, 44), (91, 89, 88), (17, 16, 16), None, None, None, None, None, None, (0, 0, 0)], [None, None, (0, 0, 0), (39, 39, 38), (118, 118, 116), (171, 170, 168), (181, 180, 178), (181, 180, 178), (182, 180, 179), (172, 170, 169), (161, 160, 158), (164, 162, 161), (181, 179, 178), (181, 179, 178), (181, 179, 178), (181, 179, 178), (181, 179, 178), (181, 179, 178), (181, 179, 178), (181, 179, 178), (181, 179, 178), (181, 179, 178), (181, 180, 178), (181, 179, 178), (162, 160, 158), (175, 173, 170), (179, 177, 174), (179, 177, 174), (179, 177, 174), (179, 177, 174), (178, 176, 173), (163, 161, 158), (117, 115, 113), (68, 67, 65), (84, 81, 78), (55, 53, 51), (59, 56, 53), (111, 107, 102), (13, 13, 12), None, None, None, None, None, (1, 1, 1), (34, 30, 26)], [None, None, (39, 39, 38), (156, 154, 152), (180, 178, 176), (180, 178, 176), (180, 177, 175), (180, 177, 175), (180, 178, 175), (179, 177, 174), (149, 147, 146), (168, 166, 164), (180, 178, 176), (180, 178, 175), (180, 177, 175), (180, 177, 175), (180, 177, 175), (180, 177, 175), (180, 177, 175), (180, 177, 175), (180, 177, 175), (180, 177, 175), (180, 177, 175), (180, 178, 176), (166, 164, 162), (168, 165, 161), (177, 174, 170), (177, 174, 170), (177, 174, 170), (177, 174, 170), (177, 174, 170), (166, 163, 160), (167, 164, 160), (175, 172, 168), (149, 145, 140), (74, 69, 64), (116, 112, 108), (126, 122, 120), (60, 59, 58), (6, 6, 6), None, None, None, None, (8, 7, 6), (93, 83, 71)], [None, (5, 5, 5), (119, 117, 115), (179, 176, 173), (178, 176, 173), (178, 176, 173), (178, 176, 173), (178, 176, 173), (178, 176, 173), (179, 177, 174), (146, 144, 142), (165, 163, 160), (176, 173, 170), (177, 175, 172), (178, 176, 173), (178, 176, 173), (178, 176, 173), (178, 176, 173), (178, 176, 173), (178, 176, 173), (178, 176, 173), (178, 176, 173), (178, 176, 173), (179, 176, 173), (168, 166, 163), (163, 160, 155), (175, 171, 166), (175, 170, 166), (175, 170, 166), (175, 170, 166), (175, 171, 166), (156, 153, 148), (152, 148, 144), (171, 167, 162), (170, 166, 161), (125, 120, 114), (125, 121, 117), (170, 166, 162), (170, 166, 161), (92, 90, 87), (5, 5, 5), (4, 3, 3), (35, 31, 26), (1, 1, 1), (41, 37, 32), (124, 111, 96)], [None, (37, 36, 36), (164, 161, 158), (177, 174, 171), (177, 174, 170), (177, 174, 170), (177, 174, 170), (177, 174, 170), (177, 174, 170), (178, 175, 171), (150, 148, 145), (153, 150, 147), (154, 151, 148), (167, 164, 160), (178, 174, 171), (177, 174, 170), (177, 174, 170), (177, 174, 170), (177, 174, 170), (177, 174, 170), (177, 174, 170), (177, 174, 170), (177, 174, 170), (178, 174, 171), (167, 164, 160), (161, 157, 152), (173, 168, 162), (173, 167, 162), (173, 167, 162), (173, 167, 162), (173, 168, 162), (164, 159, 153), (150, 145, 140), (162, 157, 151), (156, 151, 146), (137, 133, 129), (151, 147, 142), (171, 166, 160), (174, 168, 163), (167, 162, 157), (103, 100, 96), (76, 72, 67), (106, 97, 87), (42, 40, 38), (116, 104, 92), (102, 91, 79)], [(1, 1, 1), (80, 79, 76), (168, 164, 160), (176, 172, 168), (176, 172, 168), (176, 172, 168), (176, 172, 168), (176, 172, 168), (176, 172, 168), (176, 172, 168), (152, 148, 145), (169, 166, 162), (168, 164, 160), (162, 159, 155), (176, 173, 168), (176, 172, 168), (176, 172, 168), (176, 172, 168), (176, 172, 168), (176, 172, 168), (176, 172, 168), (176, 172, 168), (176, 172, 168), (176, 173, 168), (164, 160, 156), (159, 153, 147), (170, 164, 157), (170, 164, 158), (170, 164, 158), (170, 164, 158), (170, 164, 158), (169, 163, 157), (149, 144, 138), (150, 145, 139), (141, 136, 130), (134, 129, 124), (153, 148, 142), (152, 147, 141), (159, 153, 147), (130, 126, 120), (121, 116, 112), (150, 144, 138), (156, 150, 144), (155, 149, 143), (133, 127, 119), (52, 48, 44)], [(20, 19, 19), (80, 78, 75), (156, 152, 149), (175, 171, 166), (173, 168, 164), (171, 167, 162), (174, 170, 165), (174, 170, 165), (174, 170, 165), (175, 170, 166), (143, 140, 136), (166, 162, 157), (171, 166, 162), (158, 154, 150), (175, 170, 165), (174, 170, 165), (174, 170, 165), (174, 170, 165), (174, 170, 165), (174, 170, 165), (174, 170, 165), (174, 170, 165), (174, 170, 165), (175, 171, 166), (157, 153, 148), (152, 146, 139), (165, 158, 150), (168, 162, 154), (168, 161, 153), (168, 161, 153), (168, 161, 153), (169, 162, 154), (153, 147, 140), (137, 132, 125), (145, 139, 132), (153, 147, 140), (168, 162, 154), (167, 160, 152), (141, 135, 129), (81, 78, 74), (74, 71, 67), (145, 139, 132), (170, 164, 155), (169, 162, 154), (152, 146, 138), (93, 89, 85)], [(32, 31, 30), (58, 56, 55), (160, 156, 151), (174, 169, 163), (165, 160, 155), (164, 159, 154), (173, 169, 163), (173, 168, 163), (173, 168, 163), (172, 167, 161), (144, 140, 135), (163, 158, 153), (173, 168, 163), (155, 151, 146), (171, 166, 161), (173, 168, 163), (173, 168, 163), (173, 168, 163), (173, 168, 163), (173, 168, 163), (173, 168, 163), (173, 168, 163), (173, 168, 163), (174, 169, 163), (144, 139, 133), (148, 141, 133), (163, 156, 147), (166, 159, 150), (166, 158, 149), (166, 158, 149), (166, 158, 149), (167, 159, 150), (158, 150, 142), (131, 125, 117), (144, 137, 129), (140, 134, 126), (167, 159, 151), (166, 159, 150), (164, 156, 148), (149, 142, 134), (152, 145, 137), (165, 158, 149), (168, 160, 151), (156, 148, 140), (104, 99, 94), (106, 101, 95)], [(36, 35, 33), (36, 35, 34), (143, 139, 134), (167, 162, 156), (157, 152, 146), (169, 163, 157), (172, 166, 160), (172, 166, 160), (173, 167, 161), (162, 157, 151), (151, 146, 141), (158, 153, 147), (173, 167, 161), (159, 154, 148), (163, 157, 152), (172, 167, 161), (172, 166, 160), (172, 166, 160), (172, 166, 160), (172, 166, 160), (172, 166, 160), (172, 166, 160), (172, 166, 160), (169, 163, 157), (143, 136, 129), (147, 139, 130), (158, 149, 140), (161, 153, 143), (164, 156, 146), (164, 155, 145), (164, 155, 145), (164, 156, 146), (158, 150, 140), (129, 122, 114), (145, 137, 128), (104, 99, 92), (147, 140, 131), (166, 157, 147), (164, 156, 146), (165, 156, 146), (166, 157, 147), (163, 155, 145), (147, 139, 130), (141, 133, 125), (118, 112, 105), (74, 70, 66)], [(41, 40, 38), (26, 25, 24), (118, 113, 108), (149, 144, 138), (155, 150, 144), (169, 163, 156), (171, 165, 158), (171, 165, 158), (167, 161, 155), (142, 137, 132), (165, 159, 152), (153, 147, 141), (168, 162, 155), (166, 160, 154), (153, 148, 142), (170, 164, 158), (170, 164, 158), (170, 164, 158), (170, 164, 158), (170, 164, 158), (170, 164, 158), (170, 164, 158), (171, 165, 158), (156, 150, 144), (142, 134, 124), (142, 134, 124), (144, 135, 125), (157, 148, 137), (158, 149, 138), (162, 152, 141), (162, 152, 141), (163, 154, 142), (150, 141, 131), (134, 126, 117), (132, 124, 115), (87, 82, 76), (53, 50, 47), (134, 126, 117), (158, 148, 137), (157, 148, 137), (146, 137, 127), (111, 104, 97), (78, 73, 68), (102, 96, 89), (57, 53, 50), (16, 16, 14)], [(77, 74, 70), (30, 29, 27), (108, 104, 99), (144, 139, 132), (147, 141, 134), (151, 145, 138), (161, 155, 148), (158, 152, 145), (145, 139, 133), (146, 141, 134), (170, 163, 156), (160, 153, 146), (154, 148, 141), (170, 163, 156), (154, 148, 141), (162, 155, 148), (170, 163, 155), (169, 162, 155), (169, 162, 155), (169, 162, 155), (169, 162, 155), (169, 162, 155), (169, 163, 156), (147, 140, 132), (137, 128, 117), (144, 134, 123), (133, 125, 115), (148, 138, 127), (149, 139, 128), (158, 147, 135), (162, 151, 139), (149, 139, 128), (127, 119, 109), (146, 136, 125), (124, 115, 106), (38, 36, 32), (0, 0, 0), (17, 16, 15), (44, 42, 39), (46, 43, 40), (24, 23, 21), (4, 4, 4), (1, 1, 1), (4, 4, 3), (1, 1, 1), None], [(110, 105, 99), (23, 22, 21), (93, 89, 84), (150, 144, 137), (159, 152, 144), (149, 143, 136), (152, 146, 138), (158, 151, 143), (150, 144, 136), (164, 157, 149), (171, 164, 155), (170, 163, 155), (155, 148, 140), (155, 148, 141), (164, 157, 149), (150, 144, 136), (166, 159, 151), (168, 161, 153), (168, 161, 152), (168, 161, 152), (168, 161, 152), (168, 161, 152), (167, 160, 152), (132, 125, 116), (143, 132, 120), (135, 125, 114), (128, 119, 108), (70, 65, 59), (79, 73, 67), (94, 87, 80), (85, 79, 72), (34, 32, 29), (59, 55, 50), (136, 126, 114), (119, 110, 101), (24, 22, 20), None, None, None, None, None, None, None, None, None, None], [(67, 64, 60), (2, 2, 2), (87, 83, 78), (152, 145, 137), (155, 148, 139), (153, 146, 138), (159, 152, 143), (164, 156, 147), (147, 140, 132), (129, 123, 116), (103, 98, 93), (116, 110, 104), (154, 147, 139), (155, 148, 139), (151, 144, 136), (155, 147, 139), (150, 143, 135), (165, 157, 149), (167, 159, 151), (167, 159, 150), (167, 159, 150), (167, 159, 150), (168, 160, 151), (101, 96, 89), (121, 112, 100), (136, 124, 112), (133, 122, 110), (50, 46, 41), (16, 16, 16), (110, 110, 110), (106, 106, 105), (24, 24, 24), (59, 54, 49), (83, 76, 69), (20, 19, 17), (0, 0, 0), None, None, None, None, None, None, None, None, None, None], [(11, 10, 9), (2, 2, 2), (94, 90, 84), (152, 145, 136), (163, 155, 146), (157, 149, 140), (164, 156, 146), (130, 123, 116), (61, 58, 54), (10, 10, 9), (0, 0, 0), (3, 3, 3), (40, 38, 35), (115, 109, 102), (151, 143, 134), (148, 141, 132), (144, 137, 128), (142, 135, 127), (153, 145, 136), (159, 151, 142), (162, 154, 145), (163, 155, 145), (161, 153, 143), (109, 103, 97), (41, 38, 35), (106, 96, 86), (121, 110, 98), (55, 52, 49), (70, 70, 69), (179, 177, 176), (183, 181, 180), (88, 86, 84), (40, 37, 32), (7, 7, 6), None, None, None, None, None, None, None, None, None, None, None, None], [None, (21, 20, 18), (92, 87, 81), (153, 145, 135), (165, 156, 146), (164, 155, 145), (117, 110, 103), (32, 30, 28), (1, 1, 1), (0, 0, 0), (0, 0, 0), (0, 0, 0), (0, 0, 0), (7, 7, 6), (50, 47, 45), (101, 95, 90), (124, 117, 109), (128, 122, 113), (126, 119, 111), (125, 118, 110), (126, 120, 112), (133, 126, 117), (128, 121, 113), (115, 109, 102), (49, 46, 43), (11, 10, 9), (41, 38, 35), (114, 112, 110), (99, 98, 96), (175, 172, 169), (176, 173, 170), (71, 70, 69), None, None, None, None, None, None, None, None, None, None, None, None, None, None], [None, (50, 47, 44), (96, 90, 84), (148, 140, 130), (164, 154, 143), (151, 142, 133), (35, 32, 30), (0, 0, 0), (0, 0, 0), (0, 0, 0), (0, 0, 0), (0, 0, 0), (0, 0, 0), (0, 0, 0), None, (2, 2, 1), (11, 10, 10), (22, 21, 19), (31, 29, 27), (35, 32, 30), (33, 31, 29), (29, 26, 25), (18, 17, 16), (6, 6, 5), (3, 3, 3), (0, 0, 0), (63, 62, 60), (171, 168, 163), (119, 116, 113), (168, 164, 160), (172, 168, 163), (51, 50, 48), None, None, None, None, None, None, None, None, None, None, None, None, None, None], [None, (34, 32, 29), (126, 118, 109), (150, 141, 130), (163, 152, 141), (128, 120, 110), (10, 9, 9), None, (0, 0, 0), (0, 0, 0), (0, 0, 0), (0, 0, 0), (0, 0, 0), (0, 0, 0), None, None, None, None, None, None, (0, 0, 0), (0, 0, 0), (0, 0, 0), (0, 0, 0), (0, 0, 0), (0, 0, 0), (37, 36, 35), (161, 157, 152), (148, 144, 138), (161, 156, 151), (164, 159, 155), (38, 37, 36), None, None, None, None, None, None, None, None, None, None, None, None, None, None], [None, (5, 5, 4), (107, 100, 92), (159, 149, 137), (160, 150, 138), (119, 111, 102), (5, 5, 4), None, (0, 0, 0), (0, 0, 0), (0, 0, 0), (0, 0, 0), (0, 0, 0), (0, 0, 0), None, None, None, None, None, None, (0, 0, 0), (0, 0, 0), (0, 0, 0), (0, 0, 0), (0, 0, 0), (0, 0, 0), (9, 9, 9), (132, 127, 121), (169, 163, 155), (168, 162, 154), (161, 155, 148), (36, 35, 33), None, None, None, None, None, None, None, None, None, None, None, None, None, None], [None, None, (57, 53, 48), (156, 145, 132), (159, 148, 135), (136, 126, 115), (18, 17, 15), None, (0, 0, 0), (0, 0, 0), (0, 0, 0), (0, 0, 0), (0, 0, 0), (0, 0, 0), (0, 0, 0), None, None, None, None, None, (0, 0, 0), (0, 0, 0), (0, 0, 0), (0, 0, 0), (0, 0, 0), (0, 0, 0), (0, 0, 0), (103, 98, 93), (167, 160, 151), (168, 160, 151), (149, 143, 135), (24, 22, 21), None, None, None, None, None, None, None, None, None, None, None, None, None, None], [None, None, (19, 18, 16), (137, 127, 115), (158, 146, 133), (154, 143, 130), (54, 50, 45), None, None, (0, 0, 0), (0, 0, 0), (0, 0, 0), (0, 0, 0), (0, 0, 0), (0, 0, 0), (0, 0, 0), None, None, None, None, (0, 0, 0), (0, 0, 0), (0, 0, 0), (0, 0, 0), (0, 0, 0), None, None, (65, 62, 58), (162, 154, 144), (165, 156, 146), (150, 142, 133), (27, 26, 24), None, None, None, None, None, None, None, None, None, None, None, None, None, None], [None, None, (6, 5, 5), (116, 107, 97), (157, 144, 130), (157, 145, 131), (115, 106, 95), (12, 11, 10), None, None, (0, 0, 0), (0, 0, 0), (0, 0, 0), (0, 0, 0), (0, 0, 0), (0, 0, 0), (0, 0, 0), None, None, None, (0, 0, 0), (0, 0, 0), (0, 0, 0), (0, 0, 0), (0, 0, 0), None, None, (44, 42, 38), (157, 148, 136), (162, 152, 140), (159, 149, 138), (57, 53, 49), None, None, None, None, None, None, None, None, None, None, None, None, None, None], [None, None, (2, 2, 1), (104, 96, 85), (153, 141, 126), (144, 132, 118), (137, 125, 112), (78, 72, 64), (6, 5, 5), None, None, (0, 0, 0), (0, 0, 0), (0, 0, 0), (0, 0, 0), (0, 0, 0), (0, 0, 0), (0, 0, 0), None, (0, 0, 0), (0, 0, 0), (0, 0, 0), (0, 0, 0), (0, 0, 0), (0, 0, 0), (0, 0, 0), None, (58, 54, 49), (157, 146, 133), (157, 146, 133), (153, 142, 130), (108, 100, 91), (14, 13, 12), None, None, None, None, None, None, None, None, None, None, None, None, None], [None, None, (0, 0, 0), (79, 72, 64), (133, 122, 108), (119, 109, 97), (116, 106, 94), (147, 134, 119), (61, 55, 49), None, None, (0, 0, 0), (0, 0, 0), (0, 0, 0), (0, 0, 0), (0, 0, 0), (0, 0, 0), (0, 0, 0), None, (0, 0, 0), (0, 0, 0), (0, 0, 0), (0, 0, 0), (0, 0, 0), (0, 0, 0), (0, 0, 0), None, (56, 51, 46), (142, 130, 117), (129, 119, 107), (131, 120, 108), (142, 131, 118), (101, 93, 84), (7, 6, 6), None, None, None, None, None, None, None, None, None, None, None, None], [None, None, None, (11, 10, 9), (38, 34, 30), (60, 54, 48), (42, 38, 34), (73, 66, 59), (39, 36, 31), None, None, None, (0, 0, 0), (0, 0, 0), (0, 0, 0), (0, 0, 0), (0, 0, 0), (0, 0, 0), None, None, (0, 0, 0), (0, 0, 0), (0, 0, 0), (0, 0, 0), (0, 0, 0), (0, 0, 0), None, (7, 7, 6), (39, 36, 32), (82, 75, 67), (112, 103, 91), (95, 87, 78), (110, 101, 90), (14, 13, 12), None, None, None, None, None, None, None, None, None, None, None, None]]
width = 200
height = 100
coords = (100, 375)
for y in range(len(rhino)):
    for x in range(len(rhino[y])):
        if rhino[y][x] is not None:
            obj = Rectangle(width/len(rhino[y]), height/len(rhino), Point(width*x/len(rhino[y])+coords[0], height*y/len(rhino)+coords[1]))
            obj.setFillColor((rhino[y][x][0], rhino[y][x][1], rhino[y][x][2]))
            obj.setDepth(4)
            obj.setBorderWidth(0)
            canvas.add(obj)
            rhinoObj.append(obj)

grassBack = Polygon(Point(0, 500), *grass(0.075, 0, 500, 500, 425), Point(500, 500))
grassBack.setFillColor((127, 127, 0))
grassBack.setDepth(2)
canvas.add(grassBack)

grassFront = Polygon(Point(0, 500), *grass(0.3, 0, 500, 500, 450), Point(500, 500))
grassFront.setFillColor((255, 255, 0))
grassFront.setDepth(1)
canvas.add(grassFront)

for i in range(3):
    rand = random()
    for obj in rhinoObj:
        obj.move(10*rand, 0)
canvas.clear()

message = "(Sithi uhm ingonyama)"
fontSize = 18
text = Text(message, fontSize, Point(300, 200))
text.setFontColor((0, 0, 0))
text.setDepth(0)
canvas.add(text)

gazelleObj = []
gazelle = [[None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, (0, 0, 0), (0, 0, 0), (0, 0, 0), (0, 0, 0), None, None, None], [None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, (0, 0, 0), (0, 0, 0), (0, 0, 0), (0, 0, 0), None, None, None], [None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, (0, 0, 0), (2, 1, 0), (0, 0, 0), (0, 0, 0), (1, 1, 0), (0, 1, 2), (0, 0, 0), None, None], [None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, (0, 0, 0), (18, 8, 2), (42, 19, 4), (28, 13, 3), (64, 28, 4), (28, 17, 14), (2, 6, 14), (0, 0, 0), None], [None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, (2, 1, 0), (35, 16, 3), (79, 35, 6), (128, 74, 38), (123, 100, 86), (91, 93, 98), (15, 15, 15), None], [None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, (99, 82, 71), (202, 169, 146), (160, 151, 145), (140, 140, 140), (66, 66, 67), None], [None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, (32, 27, 24), (213, 180, 158), (242, 208, 185), (226, 214, 206), (161, 157, 153), (162, 162, 162), (59, 59, 59)], [None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, (3, 3, 2), (126, 102, 85), (245, 198, 167), (236, 194, 166), (234, 211, 194), (191, 176, 165), (147, 140, 136), (106, 105, 104)], [None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, (7, 5, 4), (94, 70, 54), (224, 169, 133), (239, 181, 142), (224, 174, 140), (129, 110, 96), (19, 17, 15), (35, 33, 31), (37, 36, 36)], [None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, (32, 21, 14), (95, 65, 44), (121, 83, 56), (157, 108, 76), (218, 153, 108), (229, 161, 115), (227, 160, 114), (163, 122, 94), (20, 16, 14), None, None, None], [None, None, None, None, None, None, None, None, None, None, None, None, None, None, (0, 0, 0), (2, 1, 1), (7, 4, 2), (18, 11, 6), (60, 37, 21), (175, 111, 67), (219, 140, 87), (220, 141, 88), (222, 142, 88), (221, 142, 88), (221, 141, 87), (199, 132, 86), (77, 58, 45), None, None, None, None], [None, None, None, None, None, None, None, None, None, (0, 0, 0), (20, 11, 4), (55, 30, 12), (86, 47, 21), (105, 57, 26), (120, 66, 30), (138, 77, 35), (155, 88, 41), (175, 99, 47), (201, 115, 56), (212, 122, 60), (211, 121, 60), (203, 116, 57), (187, 106, 51), (170, 94, 42), (161, 89, 40), (119, 63, 25), (29, 14, 5), None, None, None, None], [None, None, None, None, None, None, None, None, (16, 8, 2), (103, 49, 13), (168, 83, 25), (195, 97, 31), (201, 101, 33), (200, 101, 33), (198, 100, 33), (200, 100, 33), (199, 100, 33), (197, 99, 33), (190, 96, 32), (176, 88, 29), (156, 78, 25), (143, 73, 25), (144, 75, 30), (157, 88, 41), (147, 89, 51), (95, 68, 51), (90, 54, 30), (10, 4, 1), None, None, None], [None, None, None, None, None, None, None, (4, 2, 0), (115, 52, 10), (196, 90, 18), (198, 91, 18), (197, 90, 18), (198, 91, 18), (180, 82, 15), (141, 63, 11), (143, 64, 11), (142, 63, 11), (138, 62, 10), (133, 60, 11), (138, 71, 27), (165, 105, 65), (194, 133, 92), (204, 142, 100), (199, 142, 103), (190, 164, 146), (180, 171, 164), (118, 98, 85), (50, 24, 6), (2, 1, 0), None, None], [None, None, None, None, None, None, None, (24, 11, 2), (173, 79, 15), (198, 90, 17), (197, 90, 17), (197, 90, 17), (198, 89, 14), (183, 90, 27), (150, 90, 50), (148, 88, 48), (152, 94, 55), (162, 106, 69), (182, 131, 96), (214, 166, 134), (229, 181, 150), (223, 177, 146), (219, 174, 143), (137, 111, 93), (68, 67, 66), (29, 29, 28), (5, 4, 4), (47, 21, 4), (30, 14, 3), None, None], [None, None, None, None, None, None, None, (18, 8, 1), (168, 77, 14), (198, 90, 16), (197, 88, 14), (195, 92, 21), (190, 111, 56), (205, 162, 132), (234, 204, 184), (238, 208, 187), (241, 210, 190), (244, 214, 194), (247, 217, 196), (245, 215, 194), (232, 203, 183), (184, 159, 142), (92, 78, 69), (10, 8, 7), None, None, None, (13, 6, 1), (58, 26, 5), (3, 1, 0), None], [None, None, None, None, (0, 0, 0), (31, 31, 31), (55, 57, 58), (71, 44, 26), (181, 82, 13), (196, 98, 31), (193, 121, 72), (179, 144, 120), (166, 158, 152), (123, 121, 119), (114, 106, 100), (171, 157, 148), (201, 185, 174), (212, 196, 184), (177, 163, 154), (122, 112, 105), (60, 56, 52), (14, 13, 12), None, None, None, None, (0, 0, 0), (52, 24, 5), (84, 38, 8), (7, 3, 1), None], [None, None, None, None, (21, 22, 22), (106, 107, 108), (132, 112, 98), (172, 98, 47), (206, 151, 114), (198, 175, 159), (171, 166, 162), (153, 154, 154), (78, 78, 79), (9, 9, 9), (0, 0, 0), (7, 7, 6), (18, 17, 16), (23, 22, 21), (7, 6, 6), None, None, None, None, None, None, None, (0, 0, 0), (56, 25, 5), (62, 28, 6), (4, 2, 0), None], [None, None, None, (5, 5, 5), (79, 78, 77), (146, 102, 73), (179, 97, 41), (181, 142, 115), (117, 114, 112), (65, 66, 66), (48, 48, 49), (35, 35, 35), (3, 3, 3), None, None, None, None, None, None, None, None, None, None, None, None, None, None, (21, 9, 2), (26, 11, 2), None, None], [None, None, (1, 1, 1), (45, 46, 47), (115, 83, 60), (160, 74, 16), (97, 63, 39), (35, 34, 34), (0, 0, 0), None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, (2, 1, 0), (2, 1, 0), None, None], [None, None, (27, 27, 28), (75, 68, 64), (124, 59, 15), (54, 25, 4), (0, 0, 0), None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None], [None, (8, 8, 8), (63, 63, 63), (90, 50, 23), (69, 31, 5), (1, 0, 0), None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None], [None, (48, 50, 51), (86, 60, 44), (79, 35, 5), (6, 3, 1), None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None], [(21, 11, 3), (66, 46, 32), (89, 44, 13), (14, 6, 1), None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None], [(93, 43, 8), (100, 45, 8), (38, 17, 3), None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None]]
width = 200
height = 200
coords = (100, 275)
for y in range(len(gazelle)):
    for x in range(len(gazelle[y])):
        if gazelle[y][x] is not None:
            obj = Rectangle(width/len(gazelle[y]), height/len(gazelle), Point(width*x/len(gazelle[y])+coords[0], height*y/len(gazelle)+coords[1]))
            obj.setFillColor((gazelle[y][x][0], gazelle[y][x][1], gazelle[y][x][2]))
            obj.setDepth(3)
            obj.setBorderWidth(0)
            canvas.add(obj)
            gazelleObj.append(obj)

gazelleObj2 = []
gazelle = [[None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, (0, 0, 0), (0, 0, 0), (0, 0, 0), (0, 0, 0), None, None, None], [None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, (0, 0, 0), (0, 0, 0), (0, 0, 0), (0, 0, 0), None, None, None], [None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, (0, 0, 0), (2, 1, 0), (0, 0, 0), (0, 0, 0), (1, 1, 0), (0, 1, 2), (0, 0, 0), None, None], [None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, (0, 0, 0), (18, 8, 2), (42, 19, 4), (28, 13, 3), (64, 28, 4), (28, 17, 14), (2, 6, 14), (0, 0, 0), None], [None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, (2, 1, 0), (35, 16, 3), (79, 35, 6), (128, 74, 38), (123, 100, 86), (91, 93, 98), (15, 15, 15), None], [None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, (99, 82, 71), (202, 169, 146), (160, 151, 145), (140, 140, 140), (66, 66, 67), None], [None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, (32, 27, 24), (213, 180, 158), (242, 208, 185), (226, 214, 206), (161, 157, 153), (162, 162, 162), (59, 59, 59)], [None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, (3, 3, 2), (126, 102, 85), (245, 198, 167), (236, 194, 166), (234, 211, 194), (191, 176, 165), (147, 140, 136), (106, 105, 104)], [None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, (7, 5, 4), (94, 70, 54), (224, 169, 133), (239, 181, 142), (224, 174, 140), (129, 110, 96), (19, 17, 15), (35, 33, 31), (37, 36, 36)], [None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, (32, 21, 14), (95, 65, 44), (121, 83, 56), (157, 108, 76), (218, 153, 108), (229, 161, 115), (227, 160, 114), (163, 122, 94), (20, 16, 14), None, None, None], [None, None, None, None, None, None, None, None, None, None, None, None, None, None, (0, 0, 0), (2, 1, 1), (7, 4, 2), (18, 11, 6), (60, 37, 21), (175, 111, 67), (219, 140, 87), (220, 141, 88), (222, 142, 88), (221, 142, 88), (221, 141, 87), (199, 132, 86), (77, 58, 45), None, None, None, None], [None, None, None, None, None, None, None, None, None, (0, 0, 0), (20, 11, 4), (55, 30, 12), (86, 47, 21), (105, 57, 26), (120, 66, 30), (138, 77, 35), (155, 88, 41), (175, 99, 47), (201, 115, 56), (212, 122, 60), (211, 121, 60), (203, 116, 57), (187, 106, 51), (170, 94, 42), (161, 89, 40), (119, 63, 25), (29, 14, 5), None, None, None, None], [None, None, None, None, None, None, None, None, (16, 8, 2), (103, 49, 13), (168, 83, 25), (195, 97, 31), (201, 101, 33), (200, 101, 33), (198, 100, 33), (200, 100, 33), (199, 100, 33), (197, 99, 33), (190, 96, 32), (176, 88, 29), (156, 78, 25), (143, 73, 25), (144, 75, 30), (157, 88, 41), (147, 89, 51), (95, 68, 51), (90, 54, 30), (10, 4, 1), None, None, None], [None, None, None, None, None, None, None, (4, 2, 0), (115, 52, 10), (196, 90, 18), (198, 91, 18), (197, 90, 18), (198, 91, 18), (180, 82, 15), (141, 63, 11), (143, 64, 11), (142, 63, 11), (138, 62, 10), (133, 60, 11), (138, 71, 27), (165, 105, 65), (194, 133, 92), (204, 142, 100), (199, 142, 103), (190, 164, 146), (180, 171, 164), (118, 98, 85), (50, 24, 6), (2, 1, 0), None, None], [None, None, None, None, None, None, None, (24, 11, 2), (173, 79, 15), (198, 90, 17), (197, 90, 17), (197, 90, 17), (198, 89, 14), (183, 90, 27), (150, 90, 50), (148, 88, 48), (152, 94, 55), (162, 106, 69), (182, 131, 96), (214, 166, 134), (229, 181, 150), (223, 177, 146), (219, 174, 143), (137, 111, 93), (68, 67, 66), (29, 29, 28), (5, 4, 4), (47, 21, 4), (30, 14, 3), None, None], [None, None, None, None, None, None, None, (18, 8, 1), (168, 77, 14), (198, 90, 16), (197, 88, 14), (195, 92, 21), (190, 111, 56), (205, 162, 132), (234, 204, 184), (238, 208, 187), (241, 210, 190), (244, 214, 194), (247, 217, 196), (245, 215, 194), (232, 203, 183), (184, 159, 142), (92, 78, 69), (10, 8, 7), None, None, None, (13, 6, 1), (58, 26, 5), (3, 1, 0), None], [None, None, None, None, (0, 0, 0), (31, 31, 31), (55, 57, 58), (71, 44, 26), (181, 82, 13), (196, 98, 31), (193, 121, 72), (179, 144, 120), (166, 158, 152), (123, 121, 119), (114, 106, 100), (171, 157, 148), (201, 185, 174), (212, 196, 184), (177, 163, 154), (122, 112, 105), (60, 56, 52), (14, 13, 12), None, None, None, None, (0, 0, 0), (52, 24, 5), (84, 38, 8), (7, 3, 1), None], [None, None, None, None, (21, 22, 22), (106, 107, 108), (132, 112, 98), (172, 98, 47), (206, 151, 114), (198, 175, 159), (171, 166, 162), (153, 154, 154), (78, 78, 79), (9, 9, 9), (0, 0, 0), (7, 7, 6), (18, 17, 16), (23, 22, 21), (7, 6, 6), None, None, None, None, None, None, None, (0, 0, 0), (56, 25, 5), (62, 28, 6), (4, 2, 0), None], [None, None, None, (5, 5, 5), (79, 78, 77), (146, 102, 73), (179, 97, 41), (181, 142, 115), (117, 114, 112), (65, 66, 66), (48, 48, 49), (35, 35, 35), (3, 3, 3), None, None, None, None, None, None, None, None, None, None, None, None, None, None, (21, 9, 2), (26, 11, 2), None, None], [None, None, (1, 1, 1), (45, 46, 47), (115, 83, 60), (160, 74, 16), (97, 63, 39), (35, 34, 34), (0, 0, 0), None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, (2, 1, 0), (2, 1, 0), None, None], [None, None, (27, 27, 28), (75, 68, 64), (124, 59, 15), (54, 25, 4), (0, 0, 0), None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None], [None, (8, 8, 8), (63, 63, 63), (90, 50, 23), (69, 31, 5), (1, 0, 0), None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None], [None, (48, 50, 51), (86, 60, 44), (79, 35, 5), (6, 3, 1), None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None], [(21, 11, 3), (66, 46, 32), (89, 44, 13), (14, 6, 1), None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None], [(93, 43, 8), (100, 45, 8), (38, 17, 3), None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None]]
width = 100
height = 100
coords = (50, 200)
for y in range(len(gazelle)):
    for x in range(len(gazelle[y])):
        if gazelle[y][x] is not None:
            obj = Rectangle(width/len(gazelle[y]), height/len(gazelle), Point(width*x/len(gazelle[y])+coords[0], height*y/len(gazelle)+coords[1]))
            obj.setFillColor((gazelle[y][x][0], gazelle[y][x][1], gazelle[y][x][2]))
            obj.setDepth(4)
            obj.setBorderWidth(0)
            canvas.add(obj)
            gazelleObj2.append(obj)

gazelleObj3 = []
gazelle = [[None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, (0, 0, 0), (0, 0, 0), (0, 0, 0), (0, 0, 0), None, None, None], [None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, (0, 0, 0), (0, 0, 0), (0, 0, 0), (0, 0, 0), None, None, None], [None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, (0, 0, 0), (2, 1, 0), (0, 0, 0), (0, 0, 0), (1, 1, 0), (0, 1, 2), (0, 0, 0), None, None], [None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, (0, 0, 0), (18, 8, 2), (42, 19, 4), (28, 13, 3), (64, 28, 4), (28, 17, 14), (2, 6, 14), (0, 0, 0), None], [None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, (2, 1, 0), (35, 16, 3), (79, 35, 6), (128, 74, 38), (123, 100, 86), (91, 93, 98), (15, 15, 15), None], [None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, (99, 82, 71), (202, 169, 146), (160, 151, 145), (140, 140, 140), (66, 66, 67), None], [None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, (32, 27, 24), (213, 180, 158), (242, 208, 185), (226, 214, 206), (161, 157, 153), (162, 162, 162), (59, 59, 59)], [None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, (3, 3, 2), (126, 102, 85), (245, 198, 167), (236, 194, 166), (234, 211, 194), (191, 176, 165), (147, 140, 136), (106, 105, 104)], [None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, (7, 5, 4), (94, 70, 54), (224, 169, 133), (239, 181, 142), (224, 174, 140), (129, 110, 96), (19, 17, 15), (35, 33, 31), (37, 36, 36)], [None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, (32, 21, 14), (95, 65, 44), (121, 83, 56), (157, 108, 76), (218, 153, 108), (229, 161, 115), (227, 160, 114), (163, 122, 94), (20, 16, 14), None, None, None], [None, None, None, None, None, None, None, None, None, None, None, None, None, None, (0, 0, 0), (2, 1, 1), (7, 4, 2), (18, 11, 6), (60, 37, 21), (175, 111, 67), (219, 140, 87), (220, 141, 88), (222, 142, 88), (221, 142, 88), (221, 141, 87), (199, 132, 86), (77, 58, 45), None, None, None, None], [None, None, None, None, None, None, None, None, None, (0, 0, 0), (20, 11, 4), (55, 30, 12), (86, 47, 21), (105, 57, 26), (120, 66, 30), (138, 77, 35), (155, 88, 41), (175, 99, 47), (201, 115, 56), (212, 122, 60), (211, 121, 60), (203, 116, 57), (187, 106, 51), (170, 94, 42), (161, 89, 40), (119, 63, 25), (29, 14, 5), None, None, None, None], [None, None, None, None, None, None, None, None, (16, 8, 2), (103, 49, 13), (168, 83, 25), (195, 97, 31), (201, 101, 33), (200, 101, 33), (198, 100, 33), (200, 100, 33), (199, 100, 33), (197, 99, 33), (190, 96, 32), (176, 88, 29), (156, 78, 25), (143, 73, 25), (144, 75, 30), (157, 88, 41), (147, 89, 51), (95, 68, 51), (90, 54, 30), (10, 4, 1), None, None, None], [None, None, None, None, None, None, None, (4, 2, 0), (115, 52, 10), (196, 90, 18), (198, 91, 18), (197, 90, 18), (198, 91, 18), (180, 82, 15), (141, 63, 11), (143, 64, 11), (142, 63, 11), (138, 62, 10), (133, 60, 11), (138, 71, 27), (165, 105, 65), (194, 133, 92), (204, 142, 100), (199, 142, 103), (190, 164, 146), (180, 171, 164), (118, 98, 85), (50, 24, 6), (2, 1, 0), None, None], [None, None, None, None, None, None, None, (24, 11, 2), (173, 79, 15), (198, 90, 17), (197, 90, 17), (197, 90, 17), (198, 89, 14), (183, 90, 27), (150, 90, 50), (148, 88, 48), (152, 94, 55), (162, 106, 69), (182, 131, 96), (214, 166, 134), (229, 181, 150), (223, 177, 146), (219, 174, 143), (137, 111, 93), (68, 67, 66), (29, 29, 28), (5, 4, 4), (47, 21, 4), (30, 14, 3), None, None], [None, None, None, None, None, None, None, (18, 8, 1), (168, 77, 14), (198, 90, 16), (197, 88, 14), (195, 92, 21), (190, 111, 56), (205, 162, 132), (234, 204, 184), (238, 208, 187), (241, 210, 190), (244, 214, 194), (247, 217, 196), (245, 215, 194), (232, 203, 183), (184, 159, 142), (92, 78, 69), (10, 8, 7), None, None, None, (13, 6, 1), (58, 26, 5), (3, 1, 0), None], [None, None, None, None, (0, 0, 0), (31, 31, 31), (55, 57, 58), (71, 44, 26), (181, 82, 13), (196, 98, 31), (193, 121, 72), (179, 144, 120), (166, 158, 152), (123, 121, 119), (114, 106, 100), (171, 157, 148), (201, 185, 174), (212, 196, 184), (177, 163, 154), (122, 112, 105), (60, 56, 52), (14, 13, 12), None, None, None, None, (0, 0, 0), (52, 24, 5), (84, 38, 8), (7, 3, 1), None], [None, None, None, None, (21, 22, 22), (106, 107, 108), (132, 112, 98), (172, 98, 47), (206, 151, 114), (198, 175, 159), (171, 166, 162), (153, 154, 154), (78, 78, 79), (9, 9, 9), (0, 0, 0), (7, 7, 6), (18, 17, 16), (23, 22, 21), (7, 6, 6), None, None, None, None, None, None, None, (0, 0, 0), (56, 25, 5), (62, 28, 6), (4, 2, 0), None], [None, None, None, (5, 5, 5), (79, 78, 77), (146, 102, 73), (179, 97, 41), (181, 142, 115), (117, 114, 112), (65, 66, 66), (48, 48, 49), (35, 35, 35), (3, 3, 3), None, None, None, None, None, None, None, None, None, None, None, None, None, None, (21, 9, 2), (26, 11, 2), None, None], [None, None, (1, 1, 1), (45, 46, 47), (115, 83, 60), (160, 74, 16), (97, 63, 39), (35, 34, 34), (0, 0, 0), None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, (2, 1, 0), (2, 1, 0), None, None], [None, None, (27, 27, 28), (75, 68, 64), (124, 59, 15), (54, 25, 4), (0, 0, 0), None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None], [None, (8, 8, 8), (63, 63, 63), (90, 50, 23), (69, 31, 5), (1, 0, 0), None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None], [None, (48, 50, 51), (86, 60, 44), (79, 35, 5), (6, 3, 1), None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None], [(21, 11, 3), (66, 46, 32), (89, 44, 13), (14, 6, 1), None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None], [(93, 43, 8), (100, 45, 8), (38, 17, 3), None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None]]
width = 150
height = 150
coords = (150, 100)
for y in range(len(gazelle)):
    for x in range(len(gazelle[y])):
        if gazelle[y][x] is not None:
            obj = Rectangle(width/len(gazelle[y]), height/len(gazelle), Point(width*x/len(gazelle[y])+coords[0], height*y/len(gazelle)+coords[1]))
            obj.setFillColor((gazelle[y][x][0], gazelle[y][x][1], gazelle[y][x][2]))
            obj.setDepth(4)
            obj.setBorderWidth(0)
            canvas.add(obj)
            gazelleObj3.append(obj)

grassBack = Polygon(Point(0, 500), *grass(0.075, 0, 500, 500, 425), Point(500, 500))
grassBack.setFillColor((127, 127, 0))
grassBack.setDepth(2)
canvas.add(grassBack)

grassFront = Polygon(Point(0, 500), *grass(0.3, 0, 500, 500, 450), Point(500, 500))
grassFront.setFillColor((255, 255, 0))
grassFront.setDepth(1)
canvas.add(grassFront)

for i in range(2):
    rand = random()
    for obj in gazelleObj:
        obj.move(20*rand, 0)
    rand = random()
    for obj in gazelleObj2:
        obj.move(20*rand, 0)
    rand = random()
    for obj in gazelleObj3:
        obj.move(20*rand, 0)
canvas.clear()

message = "Ingonyama (Ingonyama)"
fontSize = 18
text = Text(message, fontSize, Point(300, 200))
text.setFontColor((0, 0, 0))
text.setDepth(0)
canvas.add(text)

meerkatObj = []
meerkat = [[None, None, None, None, None, None, None, None, None, (5, 5, 5), (42, 40, 38), (77, 73, 71), (103, 99, 95), (83, 80, 76), (29, 28, 27), (1, 1, 1), None, None, None, None, None, None, None, None, None], [None, None, None, None, None, None, None, None, (4, 3, 3), (81, 78, 75), (152, 146, 140), (160, 153, 147), (159, 152, 145), (147, 140, 134), (125, 120, 115), (23, 22, 21), None, None, None, None, None, None, None, None, None], [None, None, None, None, None, None, None, None, (33, 30, 29), (131, 122, 115), (160, 153, 146), (166, 156, 145), (138, 127, 116), (107, 97, 89), (142, 134, 128), (92, 87, 84), (20, 19, 18), None, None, None, None, None, None, None, None], [None, None, None, None, None, None, None, None, (43, 41, 38), (128, 118, 109), (144, 136, 129), (164, 153, 140), (162, 149, 134), (157, 146, 134), (153, 145, 139), (127, 120, 115), (67, 63, 60), (2, 2, 2), None, None, None, None, None, None, None], [None, None, None, None, None, None, None, None, (15, 15, 14), (130, 123, 117), (150, 143, 136), (155, 145, 136), (155, 143, 129), (148, 138, 129), (105, 99, 96), (59, 56, 53), (15, 14, 13), None, None, None, None, None, None, None, None], [None, None, None, None, None, None, None, None, (3, 3, 3), (109, 104, 99), (148, 139, 131), (159, 149, 139), (156, 143, 129), (141, 128, 114), (36, 33, 30), None, None, None, None, None, None, None, None, None, None], [None, None, None, None, None, None, None, None, (1, 1, 1), (99, 93, 87), (147, 133, 118), (148, 133, 117), (155, 142, 128), (153, 138, 123), (112, 102, 92), (32, 30, 27), None, None, None, None, None, None, None, None, None], [None, None, None, None, None, None, None, None, None, (89, 82, 74), (136, 119, 101), (152, 134, 116), (159, 143, 124), (155, 137, 119), (161, 144, 126), (121, 109, 95), (12, 11, 9), None, None, None, None, None, None, None, None], [None, None, None, None, None, None, None, None, (0, 0, 0), (86, 78, 69), (134, 115, 96), (153, 132, 111), (154, 134, 113), (147, 126, 105), (153, 132, 111), (137, 118, 100), (33, 28, 25), None, None, None, None, None, None, None, None], [None, None, None, None, None, None, None, None, (0, 0, 0), (81, 73, 64), (142, 121, 101), (134, 113, 93), (152, 133, 116), (148, 127, 109), (144, 124, 107), (137, 121, 107), (80, 69, 60), (3, 3, 2), None, None, None, None, None, None, None], [None, None, None, None, None, None, None, None, (0, 0, 0), (88, 80, 72), (154, 134, 113), (148, 125, 102), (154, 135, 118), (144, 123, 108), (142, 121, 105), (145, 130, 116), (115, 100, 88), (18, 15, 13), None, None, None, None, None, None, None], [None, None, None, None, None, None, None, None, (0, 0, 0), (53, 49, 45), (150, 133, 116), (150, 127, 104), (154, 136, 119), (145, 127, 114), (142, 118, 101), (142, 125, 111), (137, 121, 107), (66, 58, 51), (0, 1, 1), None, None, None, None, None, None], [None, None, None, None, None, None, None, None, None, (26, 24, 22), (139, 124, 108), (139, 117, 96), (152, 132, 112), (156, 141, 129), (147, 128, 114), (141, 118, 103), (140, 121, 107), (125, 107, 94), (31, 28, 26), None, None, None, None, None, None], [None, None, None, None, None, None, None, None, None, (18, 17, 16), (130, 116, 102), (130, 109, 91), (140, 117, 96), (154, 133, 113), (152, 136, 122), (145, 128, 114), (142, 122, 107), (137, 116, 102), (99, 89, 82), (2, 2, 2), None, None, None, None, None], [None, None, None, None, None, None, None, None, None, (7, 7, 7), (117, 105, 93), (148, 126, 105), (128, 105, 87), (130, 107, 89), (141, 120, 101), (151, 135, 120), (145, 128, 116), (135, 114, 100), (117, 102, 92), (8, 8, 8), None, None, None, None, None], [None, None, None, None, None, None, None, None, None, (8, 8, 7), (119, 109, 98), (159, 140, 120), (151, 126, 104), (137, 112, 96), (114, 93, 79), (133, 111, 95), (145, 125, 111), (136, 114, 99), (111, 94, 82), (9, 8, 7), None, None, None, None, None], [None, None, None, None, None, None, None, None, None, (12, 11, 10), (116, 107, 97), (162, 147, 130), (156, 133, 110), (148, 123, 103), (119, 100, 87), (115, 93, 80), (134, 113, 97), (133, 111, 96), (106, 86, 72), (13, 11, 9), None, None, None, None, None], [None, None, None, None, None, None, None, None, None, (7, 6, 6), (109, 100, 91), (164, 150, 135), (158, 138, 117), (152, 127, 104), (133, 113, 97), (112, 94, 82), (120, 97, 82), (127, 104, 90), (83, 69, 59), (11, 9, 8), None, None, None, None, None], [None, None, None, None, None, None, None, None, None, (2, 2, 2), (98, 91, 82), (163, 150, 135), (158, 138, 117), (152, 126, 104), (146, 125, 108), (124, 109, 97), (132, 109, 93), (135, 114, 98), (65, 54, 47), (0, 0, 0), None, None, None, None, None], [None, None, None, None, None, None, None, None, None, (0, 0, 0), (89, 81, 73), (161, 144, 127), (158, 138, 117), (153, 128, 105), (146, 126, 109), (124, 110, 98), (144, 124, 108), (140, 121, 106), (54, 45, 39), None, None, None, None, None, None], [None, None, None, None, None, None, None, None, None, (4, 4, 4), (107, 94, 81), (157, 135, 113), (156, 134, 111), (153, 127, 105), (144, 123, 107), (124, 110, 99), (139, 123, 110), (111, 94, 83), (22, 18, 16), None, None, None, None, None, None], [None, None, None, None, None, None, None, None, None, (12, 11, 9), (126, 107, 89), (154, 129, 105), (154, 130, 106), (152, 127, 105), (137, 119, 104), (121, 107, 96), (128, 112, 100), (102, 82, 71), (9, 7, 6), None, None, None, None, None, None], [None, None, None, None, None, None, None, None, None, (25, 21, 18), (137, 115, 94), (151, 125, 103), (153, 127, 105), (152, 126, 105), (135, 117, 102), (117, 104, 93), (132, 112, 98), (97, 78, 66), (6, 5, 5), None, None, None, None, None, None], [None, None, None, None, None, None, None, None, None, (37, 30, 25), (142, 116, 96), (150, 122, 101), (151, 125, 103), (148, 121, 101), (131, 107, 92), (116, 102, 91), (134, 112, 98), (78, 62, 53), (0, 0, 0), None, None, None, None, None, None], [None, None, None, None, None, None, None, None, None, (56, 45, 39), (132, 106, 89), (144, 116, 97), (150, 122, 102), (144, 116, 97), (131, 104, 89), (119, 102, 91), (136, 114, 100), (68, 54, 46), None, None, None, None, None, None, None], [None, None, None, None, None, None, None, None, (4, 4, 3), (91, 71, 59), (117, 93, 80), (138, 111, 93), (148, 120, 100), (138, 110, 93), (121, 96, 82), (120, 102, 90), (132, 108, 94), (41, 32, 28), None, None, None, None, None, None, None], [None, None, None, None, None, None, None, None, (37, 28, 23), (116, 91, 78), (96, 79, 70), (123, 98, 83), (141, 113, 95), (132, 105, 89), (115, 95, 84), (130, 110, 97), (94, 76, 65), (6, 5, 4), None, None, None, None, None, None, None], [None, None, None, None, None, None, None, (7, 5, 4), (90, 70, 59), (95, 77, 68), (25, 21, 19), (89, 71, 61), (124, 98, 83), (125, 99, 85), (117, 97, 84), (127, 103, 87), (42, 33, 28), None, None, None, None, None, None, None, None], [None, None, None, None, None, None, None, (36, 27, 23), (110, 86, 75), (42, 33, 30), (3, 2, 2), (71, 57, 49), (117, 92, 79), (115, 93, 79), (119, 96, 82), (71, 56, 48), (3, 3, 2), None, None, None, None, None, None, None, None], [None, None, None, None, None, None, (0, 0, 0), (70, 54, 46), (94, 74, 64), (11, 9, 8), None, (44, 36, 30), (124, 101, 86), (84, 69, 59), (129, 106, 91), (33, 28, 24), None, None, None, None, None, None, None, None, None], [None, None, (1, 1, 1), (3, 2, 2), (3, 2, 2), (0, 0, 0), (18, 14, 12), (100, 77, 66), (61, 48, 42), (0, 0, 0), None, (27, 23, 20), (121, 104, 92), (68, 59, 53), (115, 101, 91), (44, 39, 35), None, None, None, None, None, None, None, None, None], [None, None, (13, 11, 9), (65, 51, 43), (75, 59, 51), (60, 47, 41), (81, 63, 55), (84, 67, 57), (20, 16, 14), None, None, (24, 21, 20), (118, 104, 95), (80, 70, 64), (81, 73, 68), (92, 81, 75), (25, 22, 20), (0, 0, 0), None, None, None, None, None, None, None], [None, None, (2, 1, 1), (17, 14, 12), (26, 21, 18), (22, 18, 16), (23, 18, 16), (9, 7, 6), None, None, None, (15, 14, 13), (80, 71, 66), (99, 87, 79), (49, 44, 41), (63, 57, 54), (53, 48, 44), (3, 3, 3), None, None, None, None, None, None, None], [None, None, None, None, None, None, None, None, None, None, None, None, (8, 7, 7), (31, 28, 26), (10, 9, 8), (1, 1, 1), (3, 3, 2), (0, 0, 0), None, None, None, None, None, None, None]]
width = 100
height = 100
coords = (100, 300)
for y in range(len(meerkat)):
    for x in range(len(meerkat[y])):
        if meerkat[y][x] is not None:
            obj = Rectangle(width/len(meerkat[y]), height/len(meerkat), Point(width*x/len(meerkat[y])+coords[0], height*y/len(meerkat)+coords[1]))
            obj.setFillColor((meerkat[y][x][0], meerkat[y][x][1], meerkat[y][x][2]))
            obj.setDepth(3)
            obj.setBorderWidth(0)
            canvas.add(obj)
            meerkatObj.append(obj)

meerkatObj2 = []
meerkat = [[None, None, None, None, None, None, None, None, None, (5, 5, 5), (42, 40, 38), (77, 73, 71), (103, 99, 95), (83, 80, 76), (29, 28, 27), (1, 1, 1), None, None, None, None, None, None, None, None, None], [None, None, None, None, None, None, None, None, (4, 3, 3), (81, 78, 75), (152, 146, 140), (160, 153, 147), (159, 152, 145), (147, 140, 134), (125, 120, 115), (23, 22, 21), None, None, None, None, None, None, None, None, None], [None, None, None, None, None, None, None, None, (33, 30, 29), (131, 122, 115), (160, 153, 146), (166, 156, 145), (138, 127, 116), (107, 97, 89), (142, 134, 128), (92, 87, 84), (20, 19, 18), None, None, None, None, None, None, None, None], [None, None, None, None, None, None, None, None, (43, 41, 38), (128, 118, 109), (144, 136, 129), (164, 153, 140), (162, 149, 134), (157, 146, 134), (153, 145, 139), (127, 120, 115), (67, 63, 60), (2, 2, 2), None, None, None, None, None, None, None], [None, None, None, None, None, None, None, None, (15, 15, 14), (130, 123, 117), (150, 143, 136), (155, 145, 136), (155, 143, 129), (148, 138, 129), (105, 99, 96), (59, 56, 53), (15, 14, 13), None, None, None, None, None, None, None, None], [None, None, None, None, None, None, None, None, (3, 3, 3), (109, 104, 99), (148, 139, 131), (159, 149, 139), (156, 143, 129), (141, 128, 114), (36, 33, 30), None, None, None, None, None, None, None, None, None, None], [None, None, None, None, None, None, None, None, (1, 1, 1), (99, 93, 87), (147, 133, 118), (148, 133, 117), (155, 142, 128), (153, 138, 123), (112, 102, 92), (32, 30, 27), None, None, None, None, None, None, None, None, None], [None, None, None, None, None, None, None, None, None, (89, 82, 74), (136, 119, 101), (152, 134, 116), (159, 143, 124), (155, 137, 119), (161, 144, 126), (121, 109, 95), (12, 11, 9), None, None, None, None, None, None, None, None], [None, None, None, None, None, None, None, None, (0, 0, 0), (86, 78, 69), (134, 115, 96), (153, 132, 111), (154, 134, 113), (147, 126, 105), (153, 132, 111), (137, 118, 100), (33, 28, 25), None, None, None, None, None, None, None, None], [None, None, None, None, None, None, None, None, (0, 0, 0), (81, 73, 64), (142, 121, 101), (134, 113, 93), (152, 133, 116), (148, 127, 109), (144, 124, 107), (137, 121, 107), (80, 69, 60), (3, 3, 2), None, None, None, None, None, None, None], [None, None, None, None, None, None, None, None, (0, 0, 0), (88, 80, 72), (154, 134, 113), (148, 125, 102), (154, 135, 118), (144, 123, 108), (142, 121, 105), (145, 130, 116), (115, 100, 88), (18, 15, 13), None, None, None, None, None, None, None], [None, None, None, None, None, None, None, None, (0, 0, 0), (53, 49, 45), (150, 133, 116), (150, 127, 104), (154, 136, 119), (145, 127, 114), (142, 118, 101), (142, 125, 111), (137, 121, 107), (66, 58, 51), (0, 1, 1), None, None, None, None, None, None], [None, None, None, None, None, None, None, None, None, (26, 24, 22), (139, 124, 108), (139, 117, 96), (152, 132, 112), (156, 141, 129), (147, 128, 114), (141, 118, 103), (140, 121, 107), (125, 107, 94), (31, 28, 26), None, None, None, None, None, None], [None, None, None, None, None, None, None, None, None, (18, 17, 16), (130, 116, 102), (130, 109, 91), (140, 117, 96), (154, 133, 113), (152, 136, 122), (145, 128, 114), (142, 122, 107), (137, 116, 102), (99, 89, 82), (2, 2, 2), None, None, None, None, None], [None, None, None, None, None, None, None, None, None, (7, 7, 7), (117, 105, 93), (148, 126, 105), (128, 105, 87), (130, 107, 89), (141, 120, 101), (151, 135, 120), (145, 128, 116), (135, 114, 100), (117, 102, 92), (8, 8, 8), None, None, None, None, None], [None, None, None, None, None, None, None, None, None, (8, 8, 7), (119, 109, 98), (159, 140, 120), (151, 126, 104), (137, 112, 96), (114, 93, 79), (133, 111, 95), (145, 125, 111), (136, 114, 99), (111, 94, 82), (9, 8, 7), None, None, None, None, None], [None, None, None, None, None, None, None, None, None, (12, 11, 10), (116, 107, 97), (162, 147, 130), (156, 133, 110), (148, 123, 103), (119, 100, 87), (115, 93, 80), (134, 113, 97), (133, 111, 96), (106, 86, 72), (13, 11, 9), None, None, None, None, None], [None, None, None, None, None, None, None, None, None, (7, 6, 6), (109, 100, 91), (164, 150, 135), (158, 138, 117), (152, 127, 104), (133, 113, 97), (112, 94, 82), (120, 97, 82), (127, 104, 90), (83, 69, 59), (11, 9, 8), None, None, None, None, None], [None, None, None, None, None, None, None, None, None, (2, 2, 2), (98, 91, 82), (163, 150, 135), (158, 138, 117), (152, 126, 104), (146, 125, 108), (124, 109, 97), (132, 109, 93), (135, 114, 98), (65, 54, 47), (0, 0, 0), None, None, None, None, None], [None, None, None, None, None, None, None, None, None, (0, 0, 0), (89, 81, 73), (161, 144, 127), (158, 138, 117), (153, 128, 105), (146, 126, 109), (124, 110, 98), (144, 124, 108), (140, 121, 106), (54, 45, 39), None, None, None, None, None, None], [None, None, None, None, None, None, None, None, None, (4, 4, 4), (107, 94, 81), (157, 135, 113), (156, 134, 111), (153, 127, 105), (144, 123, 107), (124, 110, 99), (139, 123, 110), (111, 94, 83), (22, 18, 16), None, None, None, None, None, None], [None, None, None, None, None, None, None, None, None, (12, 11, 9), (126, 107, 89), (154, 129, 105), (154, 130, 106), (152, 127, 105), (137, 119, 104), (121, 107, 96), (128, 112, 100), (102, 82, 71), (9, 7, 6), None, None, None, None, None, None], [None, None, None, None, None, None, None, None, None, (25, 21, 18), (137, 115, 94), (151, 125, 103), (153, 127, 105), (152, 126, 105), (135, 117, 102), (117, 104, 93), (132, 112, 98), (97, 78, 66), (6, 5, 5), None, None, None, None, None, None], [None, None, None, None, None, None, None, None, None, (37, 30, 25), (142, 116, 96), (150, 122, 101), (151, 125, 103), (148, 121, 101), (131, 107, 92), (116, 102, 91), (134, 112, 98), (78, 62, 53), (0, 0, 0), None, None, None, None, None, None], [None, None, None, None, None, None, None, None, None, (56, 45, 39), (132, 106, 89), (144, 116, 97), (150, 122, 102), (144, 116, 97), (131, 104, 89), (119, 102, 91), (136, 114, 100), (68, 54, 46), None, None, None, None, None, None, None], [None, None, None, None, None, None, None, None, (4, 4, 3), (91, 71, 59), (117, 93, 80), (138, 111, 93), (148, 120, 100), (138, 110, 93), (121, 96, 82), (120, 102, 90), (132, 108, 94), (41, 32, 28), None, None, None, None, None, None, None], [None, None, None, None, None, None, None, None, (37, 28, 23), (116, 91, 78), (96, 79, 70), (123, 98, 83), (141, 113, 95), (132, 105, 89), (115, 95, 84), (130, 110, 97), (94, 76, 65), (6, 5, 4), None, None, None, None, None, None, None], [None, None, None, None, None, None, None, (7, 5, 4), (90, 70, 59), (95, 77, 68), (25, 21, 19), (89, 71, 61), (124, 98, 83), (125, 99, 85), (117, 97, 84), (127, 103, 87), (42, 33, 28), None, None, None, None, None, None, None, None], [None, None, None, None, None, None, None, (36, 27, 23), (110, 86, 75), (42, 33, 30), (3, 2, 2), (71, 57, 49), (117, 92, 79), (115, 93, 79), (119, 96, 82), (71, 56, 48), (3, 3, 2), None, None, None, None, None, None, None, None], [None, None, None, None, None, None, (0, 0, 0), (70, 54, 46), (94, 74, 64), (11, 9, 8), None, (44, 36, 30), (124, 101, 86), (84, 69, 59), (129, 106, 91), (33, 28, 24), None, None, None, None, None, None, None, None, None], [None, None, (1, 1, 1), (3, 2, 2), (3, 2, 2), (0, 0, 0), (18, 14, 12), (100, 77, 66), (61, 48, 42), (0, 0, 0), None, (27, 23, 20), (121, 104, 92), (68, 59, 53), (115, 101, 91), (44, 39, 35), None, None, None, None, None, None, None, None, None], [None, None, (13, 11, 9), (65, 51, 43), (75, 59, 51), (60, 47, 41), (81, 63, 55), (84, 67, 57), (20, 16, 14), None, None, (24, 21, 20), (118, 104, 95), (80, 70, 64), (81, 73, 68), (92, 81, 75), (25, 22, 20), (0, 0, 0), None, None, None, None, None, None, None], [None, None, (2, 1, 1), (17, 14, 12), (26, 21, 18), (22, 18, 16), (23, 18, 16), (9, 7, 6), None, None, None, (15, 14, 13), (80, 71, 66), (99, 87, 79), (49, 44, 41), (63, 57, 54), (53, 48, 44), (3, 3, 3), None, None, None, None, None, None, None], [None, None, None, None, None, None, None, None, None, None, None, None, (8, 7, 7), (31, 28, 26), (10, 9, 8), (1, 1, 1), (3, 3, 2), (0, 0, 0), None, None, None, None, None, None, None]]
width = 100
height = 100
coords = (50, 200)
for y in range(len(meerkat)):
    for x in range(len(meerkat[y])):
        if meerkat[y][x] is not None:
            obj = Rectangle(width/len(meerkat[y]), height/len(meerkat), Point(width*x/len(meerkat[y])+coords[0], height*y/len(meerkat)+coords[1]))
            obj.setFillColor((meerkat[y][x][0], meerkat[y][x][1], meerkat[y][x][2]))
            obj.setDepth(4)
            obj.setBorderWidth(0)
            canvas.add(obj)
            meerkatObj2.append(obj)

meerkatObj3 = []
meerkat = [[None, None, None, None, None, None, None, None, None, (5, 5, 5), (42, 40, 38), (77, 73, 71), (103, 99, 95), (83, 80, 76), (29, 28, 27), (1, 1, 1), None, None, None, None, None, None, None, None, None], [None, None, None, None, None, None, None, None, (4, 3, 3), (81, 78, 75), (152, 146, 140), (160, 153, 147), (159, 152, 145), (147, 140, 134), (125, 120, 115), (23, 22, 21), None, None, None, None, None, None, None, None, None], [None, None, None, None, None, None, None, None, (33, 30, 29), (131, 122, 115), (160, 153, 146), (166, 156, 145), (138, 127, 116), (107, 97, 89), (142, 134, 128), (92, 87, 84), (20, 19, 18), None, None, None, None, None, None, None, None], [None, None, None, None, None, None, None, None, (43, 41, 38), (128, 118, 109), (144, 136, 129), (164, 153, 140), (162, 149, 134), (157, 146, 134), (153, 145, 139), (127, 120, 115), (67, 63, 60), (2, 2, 2), None, None, None, None, None, None, None], [None, None, None, None, None, None, None, None, (15, 15, 14), (130, 123, 117), (150, 143, 136), (155, 145, 136), (155, 143, 129), (148, 138, 129), (105, 99, 96), (59, 56, 53), (15, 14, 13), None, None, None, None, None, None, None, None], [None, None, None, None, None, None, None, None, (3, 3, 3), (109, 104, 99), (148, 139, 131), (159, 149, 139), (156, 143, 129), (141, 128, 114), (36, 33, 30), None, None, None, None, None, None, None, None, None, None], [None, None, None, None, None, None, None, None, (1, 1, 1), (99, 93, 87), (147, 133, 118), (148, 133, 117), (155, 142, 128), (153, 138, 123), (112, 102, 92), (32, 30, 27), None, None, None, None, None, None, None, None, None], [None, None, None, None, None, None, None, None, None, (89, 82, 74), (136, 119, 101), (152, 134, 116), (159, 143, 124), (155, 137, 119), (161, 144, 126), (121, 109, 95), (12, 11, 9), None, None, None, None, None, None, None, None], [None, None, None, None, None, None, None, None, (0, 0, 0), (86, 78, 69), (134, 115, 96), (153, 132, 111), (154, 134, 113), (147, 126, 105), (153, 132, 111), (137, 118, 100), (33, 28, 25), None, None, None, None, None, None, None, None], [None, None, None, None, None, None, None, None, (0, 0, 0), (81, 73, 64), (142, 121, 101), (134, 113, 93), (152, 133, 116), (148, 127, 109), (144, 124, 107), (137, 121, 107), (80, 69, 60), (3, 3, 2), None, None, None, None, None, None, None], [None, None, None, None, None, None, None, None, (0, 0, 0), (88, 80, 72), (154, 134, 113), (148, 125, 102), (154, 135, 118), (144, 123, 108), (142, 121, 105), (145, 130, 116), (115, 100, 88), (18, 15, 13), None, None, None, None, None, None, None], [None, None, None, None, None, None, None, None, (0, 0, 0), (53, 49, 45), (150, 133, 116), (150, 127, 104), (154, 136, 119), (145, 127, 114), (142, 118, 101), (142, 125, 111), (137, 121, 107), (66, 58, 51), (0, 1, 1), None, None, None, None, None, None], [None, None, None, None, None, None, None, None, None, (26, 24, 22), (139, 124, 108), (139, 117, 96), (152, 132, 112), (156, 141, 129), (147, 128, 114), (141, 118, 103), (140, 121, 107), (125, 107, 94), (31, 28, 26), None, None, None, None, None, None], [None, None, None, None, None, None, None, None, None, (18, 17, 16), (130, 116, 102), (130, 109, 91), (140, 117, 96), (154, 133, 113), (152, 136, 122), (145, 128, 114), (142, 122, 107), (137, 116, 102), (99, 89, 82), (2, 2, 2), None, None, None, None, None], [None, None, None, None, None, None, None, None, None, (7, 7, 7), (117, 105, 93), (148, 126, 105), (128, 105, 87), (130, 107, 89), (141, 120, 101), (151, 135, 120), (145, 128, 116), (135, 114, 100), (117, 102, 92), (8, 8, 8), None, None, None, None, None], [None, None, None, None, None, None, None, None, None, (8, 8, 7), (119, 109, 98), (159, 140, 120), (151, 126, 104), (137, 112, 96), (114, 93, 79), (133, 111, 95), (145, 125, 111), (136, 114, 99), (111, 94, 82), (9, 8, 7), None, None, None, None, None], [None, None, None, None, None, None, None, None, None, (12, 11, 10), (116, 107, 97), (162, 147, 130), (156, 133, 110), (148, 123, 103), (119, 100, 87), (115, 93, 80), (134, 113, 97), (133, 111, 96), (106, 86, 72), (13, 11, 9), None, None, None, None, None], [None, None, None, None, None, None, None, None, None, (7, 6, 6), (109, 100, 91), (164, 150, 135), (158, 138, 117), (152, 127, 104), (133, 113, 97), (112, 94, 82), (120, 97, 82), (127, 104, 90), (83, 69, 59), (11, 9, 8), None, None, None, None, None], [None, None, None, None, None, None, None, None, None, (2, 2, 2), (98, 91, 82), (163, 150, 135), (158, 138, 117), (152, 126, 104), (146, 125, 108), (124, 109, 97), (132, 109, 93), (135, 114, 98), (65, 54, 47), (0, 0, 0), None, None, None, None, None], [None, None, None, None, None, None, None, None, None, (0, 0, 0), (89, 81, 73), (161, 144, 127), (158, 138, 117), (153, 128, 105), (146, 126, 109), (124, 110, 98), (144, 124, 108), (140, 121, 106), (54, 45, 39), None, None, None, None, None, None], [None, None, None, None, None, None, None, None, None, (4, 4, 4), (107, 94, 81), (157, 135, 113), (156, 134, 111), (153, 127, 105), (144, 123, 107), (124, 110, 99), (139, 123, 110), (111, 94, 83), (22, 18, 16), None, None, None, None, None, None], [None, None, None, None, None, None, None, None, None, (12, 11, 9), (126, 107, 89), (154, 129, 105), (154, 130, 106), (152, 127, 105), (137, 119, 104), (121, 107, 96), (128, 112, 100), (102, 82, 71), (9, 7, 6), None, None, None, None, None, None], [None, None, None, None, None, None, None, None, None, (25, 21, 18), (137, 115, 94), (151, 125, 103), (153, 127, 105), (152, 126, 105), (135, 117, 102), (117, 104, 93), (132, 112, 98), (97, 78, 66), (6, 5, 5), None, None, None, None, None, None], [None, None, None, None, None, None, None, None, None, (37, 30, 25), (142, 116, 96), (150, 122, 101), (151, 125, 103), (148, 121, 101), (131, 107, 92), (116, 102, 91), (134, 112, 98), (78, 62, 53), (0, 0, 0), None, None, None, None, None, None], [None, None, None, None, None, None, None, None, None, (56, 45, 39), (132, 106, 89), (144, 116, 97), (150, 122, 102), (144, 116, 97), (131, 104, 89), (119, 102, 91), (136, 114, 100), (68, 54, 46), None, None, None, None, None, None, None], [None, None, None, None, None, None, None, None, (4, 4, 3), (91, 71, 59), (117, 93, 80), (138, 111, 93), (148, 120, 100), (138, 110, 93), (121, 96, 82), (120, 102, 90), (132, 108, 94), (41, 32, 28), None, None, None, None, None, None, None], [None, None, None, None, None, None, None, None, (37, 28, 23), (116, 91, 78), (96, 79, 70), (123, 98, 83), (141, 113, 95), (132, 105, 89), (115, 95, 84), (130, 110, 97), (94, 76, 65), (6, 5, 4), None, None, None, None, None, None, None], [None, None, None, None, None, None, None, (7, 5, 4), (90, 70, 59), (95, 77, 68), (25, 21, 19), (89, 71, 61), (124, 98, 83), (125, 99, 85), (117, 97, 84), (127, 103, 87), (42, 33, 28), None, None, None, None, None, None, None, None], [None, None, None, None, None, None, None, (36, 27, 23), (110, 86, 75), (42, 33, 30), (3, 2, 2), (71, 57, 49), (117, 92, 79), (115, 93, 79), (119, 96, 82), (71, 56, 48), (3, 3, 2), None, None, None, None, None, None, None, None], [None, None, None, None, None, None, (0, 0, 0), (70, 54, 46), (94, 74, 64), (11, 9, 8), None, (44, 36, 30), (124, 101, 86), (84, 69, 59), (129, 106, 91), (33, 28, 24), None, None, None, None, None, None, None, None, None], [None, None, (1, 1, 1), (3, 2, 2), (3, 2, 2), (0, 0, 0), (18, 14, 12), (100, 77, 66), (61, 48, 42), (0, 0, 0), None, (27, 23, 20), (121, 104, 92), (68, 59, 53), (115, 101, 91), (44, 39, 35), None, None, None, None, None, None, None, None, None], [None, None, (13, 11, 9), (65, 51, 43), (75, 59, 51), (60, 47, 41), (81, 63, 55), (84, 67, 57), (20, 16, 14), None, None, (24, 21, 20), (118, 104, 95), (80, 70, 64), (81, 73, 68), (92, 81, 75), (25, 22, 20), (0, 0, 0), None, None, None, None, None, None, None], [None, None, (2, 1, 1), (17, 14, 12), (26, 21, 18), (22, 18, 16), (23, 18, 16), (9, 7, 6), None, None, None, (15, 14, 13), (80, 71, 66), (99, 87, 79), (49, 44, 41), (63, 57, 54), (53, 48, 44), (3, 3, 3), None, None, None, None, None, None, None], [None, None, None, None, None, None, None, None, None, None, None, None, (8, 7, 7), (31, 28, 26), (10, 9, 8), (1, 1, 1), (3, 3, 2), (0, 0, 0), None, None, None, None, None, None, None]]
width = 100
height = 100
coords = (150, 100)
for y in range(len(meerkat)):
    for x in range(len(meerkat[y])):
        if meerkat[y][x] is not None:
            obj = Rectangle(width/len(meerkat[y]), height/len(meerkat), Point(width*x/len(meerkat[y])+coords[0], height*y/len(meerkat)+coords[1]))
            obj.setFillColor((meerkat[y][x][0], meerkat[y][x][1], meerkat[y][x][2]))
            obj.setDepth(3)
            obj.setBorderWidth(0)
            canvas.add(obj)
            meerkatObj3.append(obj)

meerkatObj4 = []
meerkat = [[None, None, None, None, None, None, None, None, None, (5, 5, 5), (42, 40, 38), (77, 73, 71), (103, 99, 95), (83, 80, 76), (29, 28, 27), (1, 1, 1), None, None, None, None, None, None, None, None, None], [None, None, None, None, None, None, None, None, (4, 3, 3), (81, 78, 75), (152, 146, 140), (160, 153, 147), (159, 152, 145), (147, 140, 134), (125, 120, 115), (23, 22, 21), None, None, None, None, None, None, None, None, None], [None, None, None, None, None, None, None, None, (33, 30, 29), (131, 122, 115), (160, 153, 146), (166, 156, 145), (138, 127, 116), (107, 97, 89), (142, 134, 128), (92, 87, 84), (20, 19, 18), None, None, None, None, None, None, None, None], [None, None, None, None, None, None, None, None, (43, 41, 38), (128, 118, 109), (144, 136, 129), (164, 153, 140), (162, 149, 134), (157, 146, 134), (153, 145, 139), (127, 120, 115), (67, 63, 60), (2, 2, 2), None, None, None, None, None, None, None], [None, None, None, None, None, None, None, None, (15, 15, 14), (130, 123, 117), (150, 143, 136), (155, 145, 136), (155, 143, 129), (148, 138, 129), (105, 99, 96), (59, 56, 53), (15, 14, 13), None, None, None, None, None, None, None, None], [None, None, None, None, None, None, None, None, (3, 3, 3), (109, 104, 99), (148, 139, 131), (159, 149, 139), (156, 143, 129), (141, 128, 114), (36, 33, 30), None, None, None, None, None, None, None, None, None, None], [None, None, None, None, None, None, None, None, (1, 1, 1), (99, 93, 87), (147, 133, 118), (148, 133, 117), (155, 142, 128), (153, 138, 123), (112, 102, 92), (32, 30, 27), None, None, None, None, None, None, None, None, None], [None, None, None, None, None, None, None, None, None, (89, 82, 74), (136, 119, 101), (152, 134, 116), (159, 143, 124), (155, 137, 119), (161, 144, 126), (121, 109, 95), (12, 11, 9), None, None, None, None, None, None, None, None], [None, None, None, None, None, None, None, None, (0, 0, 0), (86, 78, 69), (134, 115, 96), (153, 132, 111), (154, 134, 113), (147, 126, 105), (153, 132, 111), (137, 118, 100), (33, 28, 25), None, None, None, None, None, None, None, None], [None, None, None, None, None, None, None, None, (0, 0, 0), (81, 73, 64), (142, 121, 101), (134, 113, 93), (152, 133, 116), (148, 127, 109), (144, 124, 107), (137, 121, 107), (80, 69, 60), (3, 3, 2), None, None, None, None, None, None, None], [None, None, None, None, None, None, None, None, (0, 0, 0), (88, 80, 72), (154, 134, 113), (148, 125, 102), (154, 135, 118), (144, 123, 108), (142, 121, 105), (145, 130, 116), (115, 100, 88), (18, 15, 13), None, None, None, None, None, None, None], [None, None, None, None, None, None, None, None, (0, 0, 0), (53, 49, 45), (150, 133, 116), (150, 127, 104), (154, 136, 119), (145, 127, 114), (142, 118, 101), (142, 125, 111), (137, 121, 107), (66, 58, 51), (0, 1, 1), None, None, None, None, None, None], [None, None, None, None, None, None, None, None, None, (26, 24, 22), (139, 124, 108), (139, 117, 96), (152, 132, 112), (156, 141, 129), (147, 128, 114), (141, 118, 103), (140, 121, 107), (125, 107, 94), (31, 28, 26), None, None, None, None, None, None], [None, None, None, None, None, None, None, None, None, (18, 17, 16), (130, 116, 102), (130, 109, 91), (140, 117, 96), (154, 133, 113), (152, 136, 122), (145, 128, 114), (142, 122, 107), (137, 116, 102), (99, 89, 82), (2, 2, 2), None, None, None, None, None], [None, None, None, None, None, None, None, None, None, (7, 7, 7), (117, 105, 93), (148, 126, 105), (128, 105, 87), (130, 107, 89), (141, 120, 101), (151, 135, 120), (145, 128, 116), (135, 114, 100), (117, 102, 92), (8, 8, 8), None, None, None, None, None], [None, None, None, None, None, None, None, None, None, (8, 8, 7), (119, 109, 98), (159, 140, 120), (151, 126, 104), (137, 112, 96), (114, 93, 79), (133, 111, 95), (145, 125, 111), (136, 114, 99), (111, 94, 82), (9, 8, 7), None, None, None, None, None], [None, None, None, None, None, None, None, None, None, (12, 11, 10), (116, 107, 97), (162, 147, 130), (156, 133, 110), (148, 123, 103), (119, 100, 87), (115, 93, 80), (134, 113, 97), (133, 111, 96), (106, 86, 72), (13, 11, 9), None, None, None, None, None], [None, None, None, None, None, None, None, None, None, (7, 6, 6), (109, 100, 91), (164, 150, 135), (158, 138, 117), (152, 127, 104), (133, 113, 97), (112, 94, 82), (120, 97, 82), (127, 104, 90), (83, 69, 59), (11, 9, 8), None, None, None, None, None], [None, None, None, None, None, None, None, None, None, (2, 2, 2), (98, 91, 82), (163, 150, 135), (158, 138, 117), (152, 126, 104), (146, 125, 108), (124, 109, 97), (132, 109, 93), (135, 114, 98), (65, 54, 47), (0, 0, 0), None, None, None, None, None], [None, None, None, None, None, None, None, None, None, (0, 0, 0), (89, 81, 73), (161, 144, 127), (158, 138, 117), (153, 128, 105), (146, 126, 109), (124, 110, 98), (144, 124, 108), (140, 121, 106), (54, 45, 39), None, None, None, None, None, None], [None, None, None, None, None, None, None, None, None, (4, 4, 4), (107, 94, 81), (157, 135, 113), (156, 134, 111), (153, 127, 105), (144, 123, 107), (124, 110, 99), (139, 123, 110), (111, 94, 83), (22, 18, 16), None, None, None, None, None, None], [None, None, None, None, None, None, None, None, None, (12, 11, 9), (126, 107, 89), (154, 129, 105), (154, 130, 106), (152, 127, 105), (137, 119, 104), (121, 107, 96), (128, 112, 100), (102, 82, 71), (9, 7, 6), None, None, None, None, None, None], [None, None, None, None, None, None, None, None, None, (25, 21, 18), (137, 115, 94), (151, 125, 103), (153, 127, 105), (152, 126, 105), (135, 117, 102), (117, 104, 93), (132, 112, 98), (97, 78, 66), (6, 5, 5), None, None, None, None, None, None], [None, None, None, None, None, None, None, None, None, (37, 30, 25), (142, 116, 96), (150, 122, 101), (151, 125, 103), (148, 121, 101), (131, 107, 92), (116, 102, 91), (134, 112, 98), (78, 62, 53), (0, 0, 0), None, None, None, None, None, None], [None, None, None, None, None, None, None, None, None, (56, 45, 39), (132, 106, 89), (144, 116, 97), (150, 122, 102), (144, 116, 97), (131, 104, 89), (119, 102, 91), (136, 114, 100), (68, 54, 46), None, None, None, None, None, None, None], [None, None, None, None, None, None, None, None, (4, 4, 3), (91, 71, 59), (117, 93, 80), (138, 111, 93), (148, 120, 100), (138, 110, 93), (121, 96, 82), (120, 102, 90), (132, 108, 94), (41, 32, 28), None, None, None, None, None, None, None], [None, None, None, None, None, None, None, None, (37, 28, 23), (116, 91, 78), (96, 79, 70), (123, 98, 83), (141, 113, 95), (132, 105, 89), (115, 95, 84), (130, 110, 97), (94, 76, 65), (6, 5, 4), None, None, None, None, None, None, None], [None, None, None, None, None, None, None, (7, 5, 4), (90, 70, 59), (95, 77, 68), (25, 21, 19), (89, 71, 61), (124, 98, 83), (125, 99, 85), (117, 97, 84), (127, 103, 87), (42, 33, 28), None, None, None, None, None, None, None, None], [None, None, None, None, None, None, None, (36, 27, 23), (110, 86, 75), (42, 33, 30), (3, 2, 2), (71, 57, 49), (117, 92, 79), (115, 93, 79), (119, 96, 82), (71, 56, 48), (3, 3, 2), None, None, None, None, None, None, None, None], [None, None, None, None, None, None, (0, 0, 0), (70, 54, 46), (94, 74, 64), (11, 9, 8), None, (44, 36, 30), (124, 101, 86), (84, 69, 59), (129, 106, 91), (33, 28, 24), None, None, None, None, None, None, None, None, None], [None, None, (1, 1, 1), (3, 2, 2), (3, 2, 2), (0, 0, 0), (18, 14, 12), (100, 77, 66), (61, 48, 42), (0, 0, 0), None, (27, 23, 20), (121, 104, 92), (68, 59, 53), (115, 101, 91), (44, 39, 35), None, None, None, None, None, None, None, None, None], [None, None, (13, 11, 9), (65, 51, 43), (75, 59, 51), (60, 47, 41), (81, 63, 55), (84, 67, 57), (20, 16, 14), None, None, (24, 21, 20), (118, 104, 95), (80, 70, 64), (81, 73, 68), (92, 81, 75), (25, 22, 20), (0, 0, 0), None, None, None, None, None, None, None], [None, None, (2, 1, 1), (17, 14, 12), (26, 21, 18), (22, 18, 16), (23, 18, 16), (9, 7, 6), None, None, None, (15, 14, 13), (80, 71, 66), (99, 87, 79), (49, 44, 41), (63, 57, 54), (53, 48, 44), (3, 3, 3), None, None, None, None, None, None, None], [None, None, None, None, None, None, None, None, None, None, None, None, (8, 7, 7), (31, 28, 26), (10, 9, 8), (1, 1, 1), (3, 3, 2), (0, 0, 0), None, None, None, None, None, None, None]]
width = 100
height = 100
coords = (300, 100)
for y in range(len(meerkat)):
    for x in range(len(meerkat[y])):
        if meerkat[y][x] is not None:
            obj = Rectangle(width/len(meerkat[y]), height/len(meerkat), Point(width*x/len(meerkat[y])+coords[0], height*y/len(meerkat)+coords[1]))
            obj.setFillColor((meerkat[y][x][0], meerkat[y][x][1], meerkat[y][x][2]))
            obj.setDepth(3)
            obj.setBorderWidth(0)
            canvas.add(obj)
            meerkatObj4.append(obj)

meerkatObj5 = []
meerkat = [[None, None, None, None, None, None, None, None, None, (5, 5, 5), (42, 40, 38), (77, 73, 71), (103, 99, 95), (83, 80, 76), (29, 28, 27), (1, 1, 1), None, None, None, None, None, None, None, None, None], [None, None, None, None, None, None, None, None, (4, 3, 3), (81, 78, 75), (152, 146, 140), (160, 153, 147), (159, 152, 145), (147, 140, 134), (125, 120, 115), (23, 22, 21), None, None, None, None, None, None, None, None, None], [None, None, None, None, None, None, None, None, (33, 30, 29), (131, 122, 115), (160, 153, 146), (166, 156, 145), (138, 127, 116), (107, 97, 89), (142, 134, 128), (92, 87, 84), (20, 19, 18), None, None, None, None, None, None, None, None], [None, None, None, None, None, None, None, None, (43, 41, 38), (128, 118, 109), (144, 136, 129), (164, 153, 140), (162, 149, 134), (157, 146, 134), (153, 145, 139), (127, 120, 115), (67, 63, 60), (2, 2, 2), None, None, None, None, None, None, None], [None, None, None, None, None, None, None, None, (15, 15, 14), (130, 123, 117), (150, 143, 136), (155, 145, 136), (155, 143, 129), (148, 138, 129), (105, 99, 96), (59, 56, 53), (15, 14, 13), None, None, None, None, None, None, None, None], [None, None, None, None, None, None, None, None, (3, 3, 3), (109, 104, 99), (148, 139, 131), (159, 149, 139), (156, 143, 129), (141, 128, 114), (36, 33, 30), None, None, None, None, None, None, None, None, None, None], [None, None, None, None, None, None, None, None, (1, 1, 1), (99, 93, 87), (147, 133, 118), (148, 133, 117), (155, 142, 128), (153, 138, 123), (112, 102, 92), (32, 30, 27), None, None, None, None, None, None, None, None, None], [None, None, None, None, None, None, None, None, None, (89, 82, 74), (136, 119, 101), (152, 134, 116), (159, 143, 124), (155, 137, 119), (161, 144, 126), (121, 109, 95), (12, 11, 9), None, None, None, None, None, None, None, None], [None, None, None, None, None, None, None, None, (0, 0, 0), (86, 78, 69), (134, 115, 96), (153, 132, 111), (154, 134, 113), (147, 126, 105), (153, 132, 111), (137, 118, 100), (33, 28, 25), None, None, None, None, None, None, None, None], [None, None, None, None, None, None, None, None, (0, 0, 0), (81, 73, 64), (142, 121, 101), (134, 113, 93), (152, 133, 116), (148, 127, 109), (144, 124, 107), (137, 121, 107), (80, 69, 60), (3, 3, 2), None, None, None, None, None, None, None], [None, None, None, None, None, None, None, None, (0, 0, 0), (88, 80, 72), (154, 134, 113), (148, 125, 102), (154, 135, 118), (144, 123, 108), (142, 121, 105), (145, 130, 116), (115, 100, 88), (18, 15, 13), None, None, None, None, None, None, None], [None, None, None, None, None, None, None, None, (0, 0, 0), (53, 49, 45), (150, 133, 116), (150, 127, 104), (154, 136, 119), (145, 127, 114), (142, 118, 101), (142, 125, 111), (137, 121, 107), (66, 58, 51), (0, 1, 1), None, None, None, None, None, None], [None, None, None, None, None, None, None, None, None, (26, 24, 22), (139, 124, 108), (139, 117, 96), (152, 132, 112), (156, 141, 129), (147, 128, 114), (141, 118, 103), (140, 121, 107), (125, 107, 94), (31, 28, 26), None, None, None, None, None, None], [None, None, None, None, None, None, None, None, None, (18, 17, 16), (130, 116, 102), (130, 109, 91), (140, 117, 96), (154, 133, 113), (152, 136, 122), (145, 128, 114), (142, 122, 107), (137, 116, 102), (99, 89, 82), (2, 2, 2), None, None, None, None, None], [None, None, None, None, None, None, None, None, None, (7, 7, 7), (117, 105, 93), (148, 126, 105), (128, 105, 87), (130, 107, 89), (141, 120, 101), (151, 135, 120), (145, 128, 116), (135, 114, 100), (117, 102, 92), (8, 8, 8), None, None, None, None, None], [None, None, None, None, None, None, None, None, None, (8, 8, 7), (119, 109, 98), (159, 140, 120), (151, 126, 104), (137, 112, 96), (114, 93, 79), (133, 111, 95), (145, 125, 111), (136, 114, 99), (111, 94, 82), (9, 8, 7), None, None, None, None, None], [None, None, None, None, None, None, None, None, None, (12, 11, 10), (116, 107, 97), (162, 147, 130), (156, 133, 110), (148, 123, 103), (119, 100, 87), (115, 93, 80), (134, 113, 97), (133, 111, 96), (106, 86, 72), (13, 11, 9), None, None, None, None, None], [None, None, None, None, None, None, None, None, None, (7, 6, 6), (109, 100, 91), (164, 150, 135), (158, 138, 117), (152, 127, 104), (133, 113, 97), (112, 94, 82), (120, 97, 82), (127, 104, 90), (83, 69, 59), (11, 9, 8), None, None, None, None, None], [None, None, None, None, None, None, None, None, None, (2, 2, 2), (98, 91, 82), (163, 150, 135), (158, 138, 117), (152, 126, 104), (146, 125, 108), (124, 109, 97), (132, 109, 93), (135, 114, 98), (65, 54, 47), (0, 0, 0), None, None, None, None, None], [None, None, None, None, None, None, None, None, None, (0, 0, 0), (89, 81, 73), (161, 144, 127), (158, 138, 117), (153, 128, 105), (146, 126, 109), (124, 110, 98), (144, 124, 108), (140, 121, 106), (54, 45, 39), None, None, None, None, None, None], [None, None, None, None, None, None, None, None, None, (4, 4, 4), (107, 94, 81), (157, 135, 113), (156, 134, 111), (153, 127, 105), (144, 123, 107), (124, 110, 99), (139, 123, 110), (111, 94, 83), (22, 18, 16), None, None, None, None, None, None], [None, None, None, None, None, None, None, None, None, (12, 11, 9), (126, 107, 89), (154, 129, 105), (154, 130, 106), (152, 127, 105), (137, 119, 104), (121, 107, 96), (128, 112, 100), (102, 82, 71), (9, 7, 6), None, None, None, None, None, None], [None, None, None, None, None, None, None, None, None, (25, 21, 18), (137, 115, 94), (151, 125, 103), (153, 127, 105), (152, 126, 105), (135, 117, 102), (117, 104, 93), (132, 112, 98), (97, 78, 66), (6, 5, 5), None, None, None, None, None, None], [None, None, None, None, None, None, None, None, None, (37, 30, 25), (142, 116, 96), (150, 122, 101), (151, 125, 103), (148, 121, 101), (131, 107, 92), (116, 102, 91), (134, 112, 98), (78, 62, 53), (0, 0, 0), None, None, None, None, None, None], [None, None, None, None, None, None, None, None, None, (56, 45, 39), (132, 106, 89), (144, 116, 97), (150, 122, 102), (144, 116, 97), (131, 104, 89), (119, 102, 91), (136, 114, 100), (68, 54, 46), None, None, None, None, None, None, None], [None, None, None, None, None, None, None, None, (4, 4, 3), (91, 71, 59), (117, 93, 80), (138, 111, 93), (148, 120, 100), (138, 110, 93), (121, 96, 82), (120, 102, 90), (132, 108, 94), (41, 32, 28), None, None, None, None, None, None, None], [None, None, None, None, None, None, None, None, (37, 28, 23), (116, 91, 78), (96, 79, 70), (123, 98, 83), (141, 113, 95), (132, 105, 89), (115, 95, 84), (130, 110, 97), (94, 76, 65), (6, 5, 4), None, None, None, None, None, None, None], [None, None, None, None, None, None, None, (7, 5, 4), (90, 70, 59), (95, 77, 68), (25, 21, 19), (89, 71, 61), (124, 98, 83), (125, 99, 85), (117, 97, 84), (127, 103, 87), (42, 33, 28), None, None, None, None, None, None, None, None], [None, None, None, None, None, None, None, (36, 27, 23), (110, 86, 75), (42, 33, 30), (3, 2, 2), (71, 57, 49), (117, 92, 79), (115, 93, 79), (119, 96, 82), (71, 56, 48), (3, 3, 2), None, None, None, None, None, None, None, None], [None, None, None, None, None, None, (0, 0, 0), (70, 54, 46), (94, 74, 64), (11, 9, 8), None, (44, 36, 30), (124, 101, 86), (84, 69, 59), (129, 106, 91), (33, 28, 24), None, None, None, None, None, None, None, None, None], [None, None, (1, 1, 1), (3, 2, 2), (3, 2, 2), (0, 0, 0), (18, 14, 12), (100, 77, 66), (61, 48, 42), (0, 0, 0), None, (27, 23, 20), (121, 104, 92), (68, 59, 53), (115, 101, 91), (44, 39, 35), None, None, None, None, None, None, None, None, None], [None, None, (13, 11, 9), (65, 51, 43), (75, 59, 51), (60, 47, 41), (81, 63, 55), (84, 67, 57), (20, 16, 14), None, None, (24, 21, 20), (118, 104, 95), (80, 70, 64), (81, 73, 68), (92, 81, 75), (25, 22, 20), (0, 0, 0), None, None, None, None, None, None, None], [None, None, (2, 1, 1), (17, 14, 12), (26, 21, 18), (22, 18, 16), (23, 18, 16), (9, 7, 6), None, None, None, (15, 14, 13), (80, 71, 66), (99, 87, 79), (49, 44, 41), (63, 57, 54), (53, 48, 44), (3, 3, 3), None, None, None, None, None, None, None], [None, None, None, None, None, None, None, None, None, None, None, None, (8, 7, 7), (31, 28, 26), (10, 9, 8), (1, 1, 1), (3, 3, 2), (0, 0, 0), None, None, None, None, None, None, None]]
width = 100
height = 100
coords = (300, 300)
for y in range(len(meerkat)):
    for x in range(len(meerkat[y])):
        if meerkat[y][x] is not None:
            obj = Rectangle(width/len(meerkat[y]), height/len(meerkat), Point(width*x/len(meerkat[y])+coords[0], height*y/len(meerkat)+coords[1]))
            obj.setFillColor((meerkat[y][x][0], meerkat[y][x][1], meerkat[y][x][2]))
            obj.setDepth(3)
            obj.setBorderWidth(0)
            canvas.add(obj)
            meerkatObj5.append(obj)

grassBack = Polygon(Point(0, 500), *grass(0.075, 0, 500, 500, 425), Point(500, 500))
grassBack.setFillColor((127, 127, 0))
grassBack.setDepth(2)
canvas.add(grassBack)

grassFront = Polygon(Point(0, 500), *grass(0.3, 0, 500, 500, 450), Point(500, 500))
grassFront.setFillColor((255, 255, 0))
grassFront.setDepth(1)
canvas.add(grassFront)

for i in range(2):
    rand = random()
    for obj in meerkatObj:
        obj.move(10*rand, 0)
    rand = random()
    for obj in meerkatObj2:
        obj.move(10*rand, 0)
    rand = random()
    for obj in meerkatObj3:
        obj.move(10*rand, 0)
    rand = random()
    for obj in meerkatObj4:
        obj.move(10*rand, 0)
    rand = random()
    for obj in meerkatObj5:
        obj.move(10*rand, 0)
canvas.clear()

message = "Siyo Nqoba"
fontSize = 18
text = Text(message, fontSize, Point(300, 200))
text.setFontColor((0, 0, 0))
text.setDepth(0)
canvas.add(text)

cheetahObj = []
cheetah = [[None, None, None, None, None, None, None, None, None, None, None, (22, 18, 8), (46, 36, 17), (44, 35, 16), (39, 32, 16), (48, 39, 20), (41, 33, 16), (17, 14, 7), (1, 1, 1), None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, (1, 0, 0), (118, 94, 41), (162, 128, 56), (114, 91, 40), (89, 71, 31), (39, 31, 14), (1, 1, 0), None], [None, None, None, None, None, None, None, None, None, (10, 8, 4), (78, 62, 34), (175, 139, 63), (187, 148, 71), (175, 139, 69), (178, 142, 70), (181, 143, 71), (173, 137, 69), (158, 126, 62), (118, 94, 47), (77, 61, 30), (26, 21, 12), (6, 5, 3), None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, (8, 6, 3), (85, 67, 30), (205, 163, 71), (230, 182, 79), (235, 186, 81), (231, 183, 79), (190, 149, 66), (65, 51, 23), None], [None, None, None, None, None, None, None, None, (10, 8, 4), (117, 93, 46), (181, 143, 70), (205, 162, 75), (196, 156, 76), (191, 152, 75), (191, 152, 75), (194, 154, 76), (208, 165, 77), (182, 145, 74), (207, 164, 77), (202, 160, 76), (169, 134, 68), (137, 109, 54), (80, 64, 34), (38, 31, 17), (16, 13, 6), (3, 2, 1), None, None, None, None, None, (22, 18, 8), (73, 58, 28), (106, 85, 44), (103, 82, 41), (69, 55, 28), (83, 66, 31), (133, 105, 50), (210, 167, 76), (234, 184, 80), (235, 186, 81), (234, 185, 80), (212, 166, 73), (182, 143, 63), (141, 112, 49), (25, 20, 9)], [None, None, None, None, None, None, None, (0, 0, 0), (92, 73, 34), (195, 155, 71), (173, 136, 61), (215, 170, 77), (199, 158, 76), (192, 152, 75), (210, 166, 78), (193, 153, 75), (212, 167, 78), (189, 150, 75), (206, 163, 77), (199, 158, 76), (196, 156, 76), (200, 159, 77), (191, 152, 75), (172, 138, 70), (161, 129, 62), (125, 100, 49), (101, 80, 38), (70, 55, 28), (58, 47, 24), (67, 54, 27), (106, 85, 41), (161, 128, 63), (191, 151, 75), (195, 155, 76), (192, 153, 75), (209, 166, 77), (208, 165, 77), (205, 163, 77), (221, 175, 79), (235, 185, 81), (236, 186, 81), (234, 184, 80), (223, 176, 77), (227, 179, 78), (186, 147, 69), (131, 104, 49)], [None, None, None, None, None, None, None, (18, 14, 8), (162, 129, 62), (133, 104, 47), (189, 149, 67), (210, 166, 78), (199, 158, 76), (202, 161, 77), (191, 152, 75), (195, 155, 76), (213, 169, 78), (205, 163, 77), (204, 162, 77), (207, 164, 77), (195, 155, 76), (197, 157, 76), (202, 160, 77), (191, 152, 75), (191, 152, 75), (200, 159, 76), (191, 152, 75), (193, 154, 75), (188, 150, 74), (183, 146, 74), (193, 154, 75), (206, 164, 77), (192, 153, 75), (193, 154, 76), (196, 156, 76), (187, 149, 75), (214, 169, 78), (218, 172, 79), (229, 181, 80), (235, 186, 81), (221, 174, 76), (220, 173, 75), (231, 182, 79), (191, 148, 70), (149, 118, 59), (129, 103, 50)], [None, None, None, None, None, None, None, (79, 63, 29), (189, 149, 69), (71, 56, 25), (158, 124, 58), (208, 165, 78), (201, 159, 77), (200, 159, 76), (214, 169, 78), (209, 166, 78), (197, 157, 76), (207, 164, 77), (215, 170, 78), (195, 155, 76), (202, 161, 77), (211, 167, 78), (210, 166, 78), (202, 160, 77), (207, 164, 77), (177, 142, 74), (196, 156, 76), (195, 155, 76), (201, 159, 77), (201, 160, 77), (197, 157, 76), (204, 162, 77), (196, 156, 76), (200, 159, 76), (189, 151, 75), (198, 157, 76), (203, 161, 77), (219, 173, 79), (229, 181, 80), (228, 180, 78), (156, 122, 54), (100, 79, 34), (105, 83, 36), (125, 96, 46), (44, 35, 19), (8, 7, 5)], [None, None, None, None, None, None, (2, 2, 1), (123, 98, 48), (140, 110, 51), (15, 12, 6), (156, 123, 56), (195, 155, 76), (222, 176, 79), (218, 173, 79), (213, 168, 78), (207, 164, 77), (194, 154, 76), (208, 164, 76), (220, 174, 79), (210, 166, 78), (199, 158, 76), (209, 165, 78), (209, 166, 78), (218, 172, 79), (194, 154, 76), (207, 164, 77), (201, 159, 77), (194, 154, 76), (202, 160, 77), (191, 152, 75), (204, 162, 77), (193, 153, 75), (200, 159, 76), (184, 147, 74), (204, 162, 77), (197, 156, 76), (211, 167, 78), (228, 180, 80), (227, 179, 78), (126, 99, 43), (14, 11, 5), None, None, (15, 12, 5), (9, 7, 3), None], [None, None, None, None, None, None, (12, 10, 4), (162, 129, 60), (112, 88, 42), (3, 2, 1), (123, 96, 43), (213, 168, 78), (197, 156, 76), (209, 166, 78), (203, 161, 77), (225, 178, 80), (218, 172, 78), (203, 160, 70), (216, 171, 76), (218, 173, 78), (224, 177, 79), (216, 171, 79), (218, 172, 79), (193, 154, 76), (217, 171, 79), (208, 165, 77), (202, 160, 77), (196, 156, 76), (197, 156, 76), (191, 152, 75), (199, 158, 76), (189, 150, 75), (201, 160, 77), (205, 163, 77), (203, 161, 77), (218, 173, 79), (233, 184, 81), (231, 182, 80), (157, 124, 54), (12, 9, 4), None, None, None, None, None, None], [None, None, None, None, None, None, (22, 18, 9), (162, 129, 64), (99, 78, 36), None, (81, 64, 30), (204, 162, 76), (220, 174, 79), (211, 167, 78), (219, 173, 79), (214, 169, 78), (209, 164, 72), (197, 155, 67), (187, 146, 64), (175, 138, 61), (193, 152, 66), (223, 175, 78), (225, 178, 79), (218, 172, 78), (214, 169, 78), (203, 161, 77), (214, 170, 78), (196, 156, 76), (193, 154, 76), (211, 167, 78), (200, 159, 76), (199, 158, 76), (211, 167, 78), (200, 159, 76), (203, 161, 77), (225, 178, 80), (238, 187, 81), (226, 179, 78), (72, 57, 25), None, None, None, None, None, None, None], [None, None, None, None, None, None, (40, 32, 15), (169, 134, 64), (63, 50, 23), None, (55, 43, 19), (189, 149, 71), (215, 170, 79), (212, 168, 78), (212, 168, 78), (223, 175, 77), (190, 149, 65), (167, 131, 58), (168, 132, 58), (68, 53, 23), (39, 31, 13), (138, 109, 47), (201, 158, 70), (209, 165, 72), (210, 165, 73), (215, 170, 76), (214, 169, 78), (204, 162, 77), (217, 172, 79), (198, 157, 76), (209, 166, 78), (197, 156, 76), (209, 165, 78), (203, 161, 77), (211, 167, 78), (207, 164, 77), (232, 183, 81), (215, 170, 73), (46, 36, 16), None, None, None, None, None, None, None], [None, None, None, None, None, None, (46, 37, 22), (172, 137, 67), (56, 44, 19), None, (62, 49, 22), (206, 164, 75), (212, 168, 78), (213, 169, 78), (204, 162, 77), (211, 166, 72), (176, 138, 61), (168, 132, 58), (152, 119, 52), (19, 15, 6), None, (9, 7, 3), (75, 59, 26), (158, 125, 55), (198, 155, 67), (198, 156, 68), (214, 169, 76), (225, 178, 80), (217, 171, 79), (208, 165, 78), (215, 170, 78), (201, 159, 77), (224, 177, 79), (209, 165, 76), (202, 160, 76), (208, 165, 77), (231, 182, 80), (180, 142, 62), (19, 15, 7), None, None, None, None, None, None, None], [None, None, None, None, None, None, (100, 79, 37), (138, 109, 52), (16, 13, 6), None, (65, 51, 23), (197, 155, 68), (218, 173, 79), (220, 174, 79), (202, 161, 76), (177, 139, 62), (177, 139, 61), (179, 140, 61), (95, 75, 33), (0, 0, 0), None, None, None, (16, 13, 6), (70, 55, 24), (133, 104, 45), (179, 141, 62), (211, 166, 72), (222, 175, 77), (223, 176, 77), (222, 175, 78), (223, 176, 78), (208, 164, 73), (193, 152, 69), (210, 167, 77), (216, 171, 79), (224, 177, 78), (83, 65, 28), (0, 0, 0), None, None, None, None, None, None, None], [None, None, None, None, None, (1, 1, 1), (128, 102, 51), (121, 95, 44), (1, 0, 0), None, (104, 82, 37), (209, 165, 74), (213, 169, 78), (213, 168, 78), (217, 171, 77), (184, 145, 63), (179, 141, 62), (155, 121, 53), (27, 21, 9), None, None, None, None, None, None, (3, 2, 1), (24, 19, 8), (54, 42, 19), (87, 68, 30), (113, 89, 39), (155, 122, 53), (201, 158, 69), (195, 153, 67), (182, 143, 63), (210, 166, 77), (220, 174, 79), (182, 143, 62), (13, 10, 5), None, None, None, None, None, None, None, None], [None, None, None, None, None, (14, 11, 7), (171, 136, 65), (110, 87, 38), None, (5, 4, 2), (159, 125, 56), (211, 168, 78), (220, 174, 79), (209, 166, 78), (210, 166, 72), (192, 151, 66), (169, 133, 57), (55, 43, 19), None, None, None, None, None, None, None, None, None, None, None, None, (54, 43, 19), (197, 154, 67), (186, 146, 64), (148, 116, 52), (190, 151, 71), (210, 166, 78), (130, 103, 50), (2, 1, 1), None, None, None, None, None, None, None, None], [None, None, None, None, None, (61, 49, 26), (184, 146, 68), (45, 35, 15), None, (56, 44, 21), (197, 156, 70), (214, 170, 79), (211, 167, 78), (201, 159, 73), (186, 146, 64), (139, 109, 47), (43, 34, 15), (1, 1, 0), None, None, None, None, None, None, None, None, None, None, None, None, (22, 17, 8), (175, 138, 60), (188, 148, 65), (110, 86, 39), (164, 129, 60), (201, 160, 76), (138, 109, 51), (2, 1, 1), None, None, None, None, None, None, None, None], [None, None, None, None, (11, 9, 5), (112, 90, 52), (126, 99, 46), (18, 14, 6), (78, 62, 27), (181, 143, 67), (207, 164, 77), (224, 177, 79), (212, 167, 73), (186, 146, 64), (148, 117, 51), (23, 18, 8), None, None, None, None, None, None, None, None, None, None, None, None, None, None, (2, 1, 1), (120, 94, 41), (191, 150, 65), (91, 71, 32), (110, 87, 40), (204, 161, 76), (162, 128, 58), (7, 5, 2), None, None, None, None, None, None, None, None], [None, None, None, (8, 7, 4), (91, 73, 39), (163, 130, 63), (35, 28, 13), (111, 87, 39), (216, 170, 75), (223, 176, 79), (203, 160, 72), (151, 119, 52), (179, 141, 62), (184, 144, 63), (69, 54, 24), None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, (57, 45, 20), (170, 132, 58), (93, 73, 32), (59, 47, 21), (191, 151, 71), (170, 134, 63), (16, 13, 6), None, None, None, None, None, None, None, None], [(11, 9, 6), (44, 36, 24), (72, 59, 35), (148, 117, 56), (111, 88, 50), (46, 36, 17), (1, 1, 0), (81, 64, 28), (217, 172, 78), (215, 170, 77), (81, 65, 28), (27, 21, 9), (158, 124, 54), (174, 137, 60), (43, 34, 15), None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, (16, 13, 6), (162, 127, 56), (107, 84, 37), (19, 15, 7), (173, 136, 63), (190, 150, 68), (25, 20, 9), None, None, None, None, None, None, None, None], [(60, 49, 31), (97, 79, 51), (90, 72, 46), (108, 86, 40), (40, 31, 14), (0, 0, 0), None, (21, 17, 7), (183, 144, 65), (191, 151, 69), (23, 18, 8), None, (75, 59, 26), (189, 148, 65), (85, 67, 29), None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, (3, 2, 1), (142, 112, 49), (126, 99, 43), (2, 2, 1), (125, 99, 47), (200, 158, 72), (36, 28, 12), None, None, None, None, None, None, None, None], [(16, 12, 7), (19, 14, 8), (10, 7, 4), (0, 0, 0), None, None, None, (0, 0, 0), (125, 98, 44), (201, 159, 71), (29, 23, 10), None, (11, 9, 4), (139, 109, 48), (151, 119, 52), (15, 12, 5), None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, (4, 3, 2), (146, 115, 50), (136, 107, 47), None, (79, 62, 28), (204, 161, 72), (51, 40, 18), None, None, None, None, None, None, None, None], [None, None, None, None, None, None, None, None, (60, 47, 21), (207, 164, 73), (61, 49, 22), None, None, (49, 38, 17), (180, 142, 62), (79, 62, 27), None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, (31, 25, 11), (173, 136, 59), (128, 101, 44), None, (39, 31, 14), (195, 154, 69), (72, 57, 25), None, None, None, None, None, None, None, None], [None, None, None, None, None, None, None, None, (18, 14, 6), (190, 150, 66), (144, 114, 50), (4, 3, 1), None, (5, 4, 2), (138, 108, 47), (168, 132, 58), (32, 25, 11), None, None, None, None, None, None, None, None, None, None, None, (11, 8, 4), (73, 57, 25), (105, 82, 36), (165, 130, 57), (190, 149, 65), (74, 58, 25), None, (16, 13, 6), (181, 143, 64), (123, 98, 43), (0, 0, 0), None, None, None, None, None, None, None], [None, None, None, None, None, None, None, None, (2, 1, 1), (143, 113, 50), (222, 175, 77), (100, 80, 35), (7, 6, 3), None, (75, 59, 26), (186, 146, 63), (155, 122, 53), (61, 48, 21), (13, 10, 4), (0, 0, 0), None, None, None, None, None, None, None, None, (35, 27, 12), (159, 125, 55), (175, 137, 60), (121, 95, 42), (58, 45, 20), (6, 4, 2), None, (2, 2, 1), (140, 110, 48), (210, 166, 72), (92, 73, 32), (21, 17, 7), (0, 0, 0), None, None, None, None, None], [None, None, None, None, None, None, None, None, None, (36, 29, 13), (119, 94, 41), (219, 173, 75), (163, 128, 56), (108, 85, 37), (31, 24, 11), (40, 31, 14), (148, 115, 50), (199, 156, 68), (160, 125, 54), (97, 76, 33), (8, 6, 3), None, None, None, None, None, None, None, (2, 2, 1), (22, 17, 8), (21, 17, 7), (1, 1, 0), None, None, None, None, (30, 24, 10), (109, 86, 38), (220, 174, 75), (192, 152, 67), (120, 95, 42), (17, 13, 6), None, None, None, None], [None, None, None, None, None, None, None, None, None, None, (17, 14, 6), (164, 129, 57), (214, 168, 73), (199, 156, 68), (62, 49, 21), None, (41, 32, 14), (137, 107, 47), (148, 117, 52), (106, 83, 37), (11, 8, 4), None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, (9, 7, 3), (117, 92, 41), (177, 139, 61), (155, 122, 53), (33, 26, 12), None, None, None, None]]
width = 200
height = 100
coords = (100, 325)
for y in range(len(cheetah)):
    for x in range(len(cheetah[y])):
        if cheetah[y][x] is not None:
            obj = Rectangle(width/len(cheetah[y]), height/len(cheetah), Point(width*x/len(cheetah[y])+coords[0], height*y/len(cheetah)+coords[1]))
            obj.setFillColor((cheetah[y][x][0], cheetah[y][x][1], cheetah[y][x][2]))
            obj.setDepth(4)
            obj.setBorderWidth(0)
            canvas.add(obj)
            cheetahObj.append(obj)

grassBack = Polygon(Point(0, 500), *grass(0.075, 0, 500, 500, 425), Point(500, 500))
grassBack.setFillColor((127, 127, 0))
grassBack.setDepth(2)
canvas.add(grassBack)

grassFront = Polygon(Point(0, 500), *grass(0.3, 0, 500, 500, 450), Point(500, 500))
grassFront.setFillColor((255, 255, 0))
grassFront.setDepth(1)
canvas.add(grassFront)

for i in range(2):
    rand = random()
    for obj in cheetahObj:
        obj.move(25*rand, 0)
canvas.clear()

message = "(Ingonyama)"
fontSize = 18
text = Text(message, fontSize, Point(300, 200))
text.setFontColor((0, 0, 0))
text.setDepth(0)
canvas.add(text)

storkObj = []
stork = [[None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, (9, 9, 9), (104, 104, 104), (166, 166, 166), (123, 123, 123), (20, 20, 21), None, None, None, None, None], [None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, (81, 81, 81), (242, 242, 242), (228, 228, 228), (222, 221, 214), (133, 122, 66), (30, 25, 0), (0, 0, 0), None, None, None], [None, None, None, None, None, None, None, None, None, None, None, None, None, None, (0, 0, 0), (127, 127, 127), (254, 254, 254), (232, 232, 234), (153, 146, 104), (184, 156, 3), (185, 154, 0), (77, 64, 0), (6, 5, 0), None, None], [None, None, None, None, None, None, None, None, None, None, None, None, None, None, (0, 0, 0), (120, 120, 120), (244, 244, 244), (86, 86, 86), (20, 18, 12), (39, 33, 0), (86, 73, 0), (126, 107, 0), (87, 74, 0), (17, 15, 0), (0, 0, 0)], [None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, (93, 93, 93), (239, 239, 239), (63, 63, 63), None, None, (0, 0, 0), (5, 4, 0), (23, 20, 0), (23, 20, 0), (2, 1, 0)], [None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, (52, 52, 52), (237, 237, 237), (122, 122, 122), (0, 0, 0), None, None, None, None, (0, 0, 0), (0, 0, 0)], [None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, (14, 14, 14), (195, 195, 195), (203, 203, 203), (22, 22, 22), None, None, None, None, None, None], [None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, (0, 0, 0), (126, 126, 126), (247, 247, 247), (102, 102, 102), (0, 0, 0), None, None, None, None, None], [None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, (66, 66, 66), (246, 246, 246), (204, 204, 204), (25, 25, 25), None, None, None, None, None], [None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, (48, 48, 48), (235, 235, 235), (250, 250, 250), (102, 102, 102), None, None, None, None, None], [None, None, None, None, None, None, None, None, None, None, (0, 0, 0), (7, 7, 7), (26, 26, 26), (48, 48, 48), (65, 65, 65), (84, 84, 84), (171, 171, 171), (253, 253, 253), (255, 255, 255), (171, 171, 171), (5, 5, 5), None, None, None, None], [None, None, None, None, None, None, None, None, (9, 9, 9), (54, 54, 54), (121, 121, 121), (180, 180, 180), (217, 217, 217), (236, 236, 236), (245, 245, 245), (242, 242, 242), (226, 226, 226), (251, 251, 251), (255, 255, 255), (195, 195, 195), (12, 12, 12), None, None, None, None], [None, None, None, None, None, None, (6, 6, 6), (71, 71, 71), (172, 172, 172), (235, 235, 235), (253, 253, 253), (255, 255, 255), (255, 255, 255), (255, 255, 255), (255, 255, 255), (255, 255, 255), (225, 225, 225), (228, 228, 228), (255, 255, 255), (172, 172, 172), (5, 5, 5), None, None, None, None], [None, None, None, None, (0, 0, 0), (30, 30, 30), (149, 149, 149), (240, 240, 240), (255, 255, 255), (255, 255, 255), (255, 255, 255), (255, 255, 255), (255, 255, 255), (255, 255, 255), (255, 255, 255), (255, 255, 255), (236, 236, 236), (224, 224, 224), (251, 251, 251), (105, 105, 105), (0, 0, 0), None, None, None, None], [None, None, None, (0, 0, 0), (49, 49, 49), (195, 195, 195), (253, 253, 253), (255, 255, 255), (255, 255, 255), (255, 255, 255), (255, 255, 255), (255, 255, 255), (255, 255, 255), (255, 255, 255), (255, 255, 255), (255, 255, 255), (218, 218, 218), (238, 238, 238), (196, 196, 196), (25, 25, 25), None, None, None, None, None], [None, None, None, (37, 37, 37), (200, 200, 200), (255, 255, 255), (255, 255, 255), (255, 255, 255), (255, 255, 255), (255, 255, 255), (255, 255, 255), (255, 255, 255), (255, 255, 255), (255, 255, 255), (255, 255, 255), (236, 236, 236), (219, 219, 219), (216, 216, 216), (58, 58, 58), None, None, None, None, None, None], [None, (0, 0, 0), (31, 31, 31), (176, 176, 176), (254, 254, 254), (255, 255, 255), (255, 255, 255), (255, 255, 255), (255, 255, 255), (255, 255, 255), (255, 255, 255), (255, 255, 255), (255, 255, 255), (255, 255, 255), (248, 248, 248), (213, 213, 213), (202, 202, 202), (63, 63, 63), (0, 0, 0), None, None, None, None, None, None], [None, (49, 49, 49), (181, 181, 181), (240, 240, 240), (255, 255, 255), (255, 255, 255), (246, 246, 246), (238, 238, 238), (255, 255, 255), (237, 237, 237), (243, 243, 243), (246, 246, 246), (253, 253, 253), (241, 241, 241), (213, 213, 213), (194, 194, 194), (58, 58, 58), (0, 0, 0), None, None, None, None, None, None, None], [(15, 15, 15), (160, 160, 160), (212, 212, 212), (222, 222, 222), (230, 230, 230), (247, 247, 247), (220, 220, 220), (235, 235, 235), (241, 241, 241), (210, 210, 210), (209, 209, 209), (190, 190, 190), (210, 210, 210), (201, 201, 201), (159, 159, 159), (51, 51, 51), (0, 0, 0), None, None, None, None, None, None, None, None], [(73, 73, 73), (199, 199, 199), (207, 207, 207), (191, 191, 191), (214, 214, 214), (212, 212, 212), (211, 211, 211), (231, 231, 231), (178, 178, 178), (188, 188, 188), (201, 201, 202), (235, 235, 237), (201, 201, 202), (190, 190, 192), (37, 37, 37), None, None, None, None, None, None, None, None, None, None], [(123, 123, 123), (223, 223, 223), (202, 202, 202), (197, 197, 197), (221, 221, 221), (171, 171, 171), (111, 111, 111), (63, 63, 63), (45, 45, 45), (51, 52, 52), (137, 135, 122), (168, 163, 137), (150, 147, 132), (119, 115, 91), (6, 6, 7), None, None, None, None, None, None, None, None, None, None], [(155, 155, 155), (223, 223, 223), (203, 203, 203), (172, 172, 172), (119, 119, 119), (30, 30, 30), (1, 1, 1), None, None, (0, 0, 0), (114, 96, 9), (110, 93, 7), (79, 67, 6), (73, 61, 0), None, None, None, None, None, None, None, None, None, None, None], [(198, 198, 198), (173, 173, 173), (85, 85, 85), (27, 27, 27), (1, 1, 1), None, None, None, None, (0, 0, 0), (130, 109, 0), (71, 59, 0), (91, 76, 0), (58, 49, 0), None, None, None, (1, 1, 0), (27, 23, 0), (63, 53, 0), (57, 48, 0), (28, 24, 0), (6, 6, 0), (0, 0, 0), None], [(91, 91, 91), (29, 29, 29), (0, 0, 0), None, None, None, None, None, None, (4, 4, 0), (137, 115, 0), (39, 33, 0), (110, 92, 0), (48, 40, 0), None, (5, 4, 0), (45, 38, 0), (125, 105, 0), (197, 165, 0), (217, 180, 0), (102, 85, 0), (34, 29, 0), (10, 9, 0), (0, 0, 0), None], [(0, 0, 0), None, None, None, None, None, None, None, None, (15, 13, 0), (149, 124, 0), (23, 19, 0), (127, 106, 0), (80, 68, 0), (61, 51, 0), (109, 92, 0), (124, 104, 0), (94, 78, 0), (73, 61, 0), (93, 79, 0), (3, 2, 0), None, None, None, None], [None, None, None, None, None, None, None, None, None, (34, 29, 0), (178, 150, 0), (22, 18, 0), (90, 76, 0), (138, 115, 0), (68, 57, 0), (29, 25, 0), (4, 3, 0), None, (5, 4, 0), (23, 20, 0), (0, 0, 0), None, None, None, None], [None, None, None, None, None, None, None, None, None, (31, 26, 0), (153, 129, 0), (15, 13, 0), (2, 1, 0), (4, 4, 0), None, None, None, None, None, (0, 0, 0), None, None, None, None, None], [None, None, None, None, None, None, None, None, None, (22, 18, 0), (143, 120, 0), (13, 11, 0), None, None, None, None, None, None, None, None, None, None, None, None, None], [None, None, None, None, None, None, None, None, None, (17, 15, 0), (137, 115, 0), (15, 12, 0), None, None, None, None, None, None, None, None, None, None, None, None, None], [None, None, None, None, None, None, None, None, None, (11, 9, 0), (129, 108, 0), (18, 15, 0), None, None, None, None, None, None, None, None, None, None, None, None, None], [None, None, None, None, None, None, None, None, None, (5, 5, 0), (120, 101, 0), (23, 19, 0), None, None, None, None, None, None, None, None, None, None, None, None, None], [None, None, None, None, None, None, None, None, None, (1, 1, 0), (111, 94, 0), (34, 29, 0), None, None, None, None, None, None, None, None, None, None, None, None, None], [None, None, None, None, None, None, None, None, None, (1, 1, 0), (133, 111, 0), (79, 66, 0), (20, 18, 0), (9, 7, 0), None, None, None, None, None, None, None, None, None, None, None], [None, None, None, None, None, None, None, None, None, (3, 3, 0), (112, 94, 0), (200, 167, 0), (132, 112, 0), (82, 69, 0), (44, 37, 0), (0, 0, 0), None, None, None, None, None, None, None, None, None], [None, None, None, None, None, None, None, None, None, None, (28, 24, 0), (156, 130, 0), (110, 93, 0), (47, 39, 0), (26, 22, 0), (0, 0, 0), None, None, None, None, None, None, None, None, None], [None, None, None, None, None, None, None, None, None, None, None, (17, 14, 0), (69, 59, 0), (14, 12, 0), None, None, None, None, None, None, None, None, None, None, None]]
width = 100
height = 100
coords = (250, 300)
for y in range(len(stork)):
    for x in range(len(stork[y])):
        if stork[y][x] is not None:
            obj = Rectangle(width/len(stork[y]), height/len(stork), Point(width*x/len(stork[y])+coords[0], height*y/len(stork)+coords[1]))
            obj.setFillColor((stork[y][x][0], stork[y][x][1], stork[y][x][2]))
            obj.setDepth(3)
            obj.setBorderWidth(0)
            canvas.add(obj)
            storkObj.append(obj)

storkObj2 = []
stork = [[None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, (9, 9, 9), (104, 104, 104), (166, 166, 166), (123, 123, 123), (20, 20, 21), None, None, None, None, None], [None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, (81, 81, 81), (242, 242, 242), (228, 228, 228), (222, 221, 214), (133, 122, 66), (30, 25, 0), (0, 0, 0), None, None, None], [None, None, None, None, None, None, None, None, None, None, None, None, None, None, (0, 0, 0), (127, 127, 127), (254, 254, 254), (232, 232, 234), (153, 146, 104), (184, 156, 3), (185, 154, 0), (77, 64, 0), (6, 5, 0), None, None], [None, None, None, None, None, None, None, None, None, None, None, None, None, None, (0, 0, 0), (120, 120, 120), (244, 244, 244), (86, 86, 86), (20, 18, 12), (39, 33, 0), (86, 73, 0), (126, 107, 0), (87, 74, 0), (17, 15, 0), (0, 0, 0)], [None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, (93, 93, 93), (239, 239, 239), (63, 63, 63), None, None, (0, 0, 0), (5, 4, 0), (23, 20, 0), (23, 20, 0), (2, 1, 0)], [None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, (52, 52, 52), (237, 237, 237), (122, 122, 122), (0, 0, 0), None, None, None, None, (0, 0, 0), (0, 0, 0)], [None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, (14, 14, 14), (195, 195, 195), (203, 203, 203), (22, 22, 22), None, None, None, None, None, None], [None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, (0, 0, 0), (126, 126, 126), (247, 247, 247), (102, 102, 102), (0, 0, 0), None, None, None, None, None], [None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, (66, 66, 66), (246, 246, 246), (204, 204, 204), (25, 25, 25), None, None, None, None, None], [None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, (48, 48, 48), (235, 235, 235), (250, 250, 250), (102, 102, 102), None, None, None, None, None], [None, None, None, None, None, None, None, None, None, None, (0, 0, 0), (7, 7, 7), (26, 26, 26), (48, 48, 48), (65, 65, 65), (84, 84, 84), (171, 171, 171), (253, 253, 253), (255, 255, 255), (171, 171, 171), (5, 5, 5), None, None, None, None], [None, None, None, None, None, None, None, None, (9, 9, 9), (54, 54, 54), (121, 121, 121), (180, 180, 180), (217, 217, 217), (236, 236, 236), (245, 245, 245), (242, 242, 242), (226, 226, 226), (251, 251, 251), (255, 255, 255), (195, 195, 195), (12, 12, 12), None, None, None, None], [None, None, None, None, None, None, (6, 6, 6), (71, 71, 71), (172, 172, 172), (235, 235, 235), (253, 253, 253), (255, 255, 255), (255, 255, 255), (255, 255, 255), (255, 255, 255), (255, 255, 255), (225, 225, 225), (228, 228, 228), (255, 255, 255), (172, 172, 172), (5, 5, 5), None, None, None, None], [None, None, None, None, (0, 0, 0), (30, 30, 30), (149, 149, 149), (240, 240, 240), (255, 255, 255), (255, 255, 255), (255, 255, 255), (255, 255, 255), (255, 255, 255), (255, 255, 255), (255, 255, 255), (255, 255, 255), (236, 236, 236), (224, 224, 224), (251, 251, 251), (105, 105, 105), (0, 0, 0), None, None, None, None], [None, None, None, (0, 0, 0), (49, 49, 49), (195, 195, 195), (253, 253, 253), (255, 255, 255), (255, 255, 255), (255, 255, 255), (255, 255, 255), (255, 255, 255), (255, 255, 255), (255, 255, 255), (255, 255, 255), (255, 255, 255), (218, 218, 218), (238, 238, 238), (196, 196, 196), (25, 25, 25), None, None, None, None, None], [None, None, None, (37, 37, 37), (200, 200, 200), (255, 255, 255), (255, 255, 255), (255, 255, 255), (255, 255, 255), (255, 255, 255), (255, 255, 255), (255, 255, 255), (255, 255, 255), (255, 255, 255), (255, 255, 255), (236, 236, 236), (219, 219, 219), (216, 216, 216), (58, 58, 58), None, None, None, None, None, None], [None, (0, 0, 0), (31, 31, 31), (176, 176, 176), (254, 254, 254), (255, 255, 255), (255, 255, 255), (255, 255, 255), (255, 255, 255), (255, 255, 255), (255, 255, 255), (255, 255, 255), (255, 255, 255), (255, 255, 255), (248, 248, 248), (213, 213, 213), (202, 202, 202), (63, 63, 63), (0, 0, 0), None, None, None, None, None, None], [None, (49, 49, 49), (181, 181, 181), (240, 240, 240), (255, 255, 255), (255, 255, 255), (246, 246, 246), (238, 238, 238), (255, 255, 255), (237, 237, 237), (243, 243, 243), (246, 246, 246), (253, 253, 253), (241, 241, 241), (213, 213, 213), (194, 194, 194), (58, 58, 58), (0, 0, 0), None, None, None, None, None, None, None], [(15, 15, 15), (160, 160, 160), (212, 212, 212), (222, 222, 222), (230, 230, 230), (247, 247, 247), (220, 220, 220), (235, 235, 235), (241, 241, 241), (210, 210, 210), (209, 209, 209), (190, 190, 190), (210, 210, 210), (201, 201, 201), (159, 159, 159), (51, 51, 51), (0, 0, 0), None, None, None, None, None, None, None, None], [(73, 73, 73), (199, 199, 199), (207, 207, 207), (191, 191, 191), (214, 214, 214), (212, 212, 212), (211, 211, 211), (231, 231, 231), (178, 178, 178), (188, 188, 188), (201, 201, 202), (235, 235, 237), (201, 201, 202), (190, 190, 192), (37, 37, 37), None, None, None, None, None, None, None, None, None, None], [(123, 123, 123), (223, 223, 223), (202, 202, 202), (197, 197, 197), (221, 221, 221), (171, 171, 171), (111, 111, 111), (63, 63, 63), (45, 45, 45), (51, 52, 52), (137, 135, 122), (168, 163, 137), (150, 147, 132), (119, 115, 91), (6, 6, 7), None, None, None, None, None, None, None, None, None, None], [(155, 155, 155), (223, 223, 223), (203, 203, 203), (172, 172, 172), (119, 119, 119), (30, 30, 30), (1, 1, 1), None, None, (0, 0, 0), (114, 96, 9), (110, 93, 7), (79, 67, 6), (73, 61, 0), None, None, None, None, None, None, None, None, None, None, None], [(198, 198, 198), (173, 173, 173), (85, 85, 85), (27, 27, 27), (1, 1, 1), None, None, None, None, (0, 0, 0), (130, 109, 0), (71, 59, 0), (91, 76, 0), (58, 49, 0), None, None, None, (1, 1, 0), (27, 23, 0), (63, 53, 0), (57, 48, 0), (28, 24, 0), (6, 6, 0), (0, 0, 0), None], [(91, 91, 91), (29, 29, 29), (0, 0, 0), None, None, None, None, None, None, (4, 4, 0), (137, 115, 0), (39, 33, 0), (110, 92, 0), (48, 40, 0), None, (5, 4, 0), (45, 38, 0), (125, 105, 0), (197, 165, 0), (217, 180, 0), (102, 85, 0), (34, 29, 0), (10, 9, 0), (0, 0, 0), None], [(0, 0, 0), None, None, None, None, None, None, None, None, (15, 13, 0), (149, 124, 0), (23, 19, 0), (127, 106, 0), (80, 68, 0), (61, 51, 0), (109, 92, 0), (124, 104, 0), (94, 78, 0), (73, 61, 0), (93, 79, 0), (3, 2, 0), None, None, None, None], [None, None, None, None, None, None, None, None, None, (34, 29, 0), (178, 150, 0), (22, 18, 0), (90, 76, 0), (138, 115, 0), (68, 57, 0), (29, 25, 0), (4, 3, 0), None, (5, 4, 0), (23, 20, 0), (0, 0, 0), None, None, None, None], [None, None, None, None, None, None, None, None, None, (31, 26, 0), (153, 129, 0), (15, 13, 0), (2, 1, 0), (4, 4, 0), None, None, None, None, None, (0, 0, 0), None, None, None, None, None], [None, None, None, None, None, None, None, None, None, (22, 18, 0), (143, 120, 0), (13, 11, 0), None, None, None, None, None, None, None, None, None, None, None, None, None], [None, None, None, None, None, None, None, None, None, (17, 15, 0), (137, 115, 0), (15, 12, 0), None, None, None, None, None, None, None, None, None, None, None, None, None], [None, None, None, None, None, None, None, None, None, (11, 9, 0), (129, 108, 0), (18, 15, 0), None, None, None, None, None, None, None, None, None, None, None, None, None], [None, None, None, None, None, None, None, None, None, (5, 5, 0), (120, 101, 0), (23, 19, 0), None, None, None, None, None, None, None, None, None, None, None, None, None], [None, None, None, None, None, None, None, None, None, (1, 1, 0), (111, 94, 0), (34, 29, 0), None, None, None, None, None, None, None, None, None, None, None, None, None], [None, None, None, None, None, None, None, None, None, (1, 1, 0), (133, 111, 0), (79, 66, 0), (20, 18, 0), (9, 7, 0), None, None, None, None, None, None, None, None, None, None, None], [None, None, None, None, None, None, None, None, None, (3, 3, 0), (112, 94, 0), (200, 167, 0), (132, 112, 0), (82, 69, 0), (44, 37, 0), (0, 0, 0), None, None, None, None, None, None, None, None, None], [None, None, None, None, None, None, None, None, None, None, (28, 24, 0), (156, 130, 0), (110, 93, 0), (47, 39, 0), (26, 22, 0), (0, 0, 0), None, None, None, None, None, None, None, None, None], [None, None, None, None, None, None, None, None, None, None, None, (17, 14, 0), (69, 59, 0), (14, 12, 0), None, None, None, None, None, None, None, None, None, None, None]]
width = 100
height = 100
coords = (150, 200)
for y in range(len(stork)):
    for x in range(len(stork[y])):
        if stork[y][x] is not None:
            obj = Rectangle(width/len(stork[y]), height/len(stork), Point(width*x/len(stork[y])+coords[0], height*y/len(stork)+coords[1]))
            obj.setFillColor((stork[y][x][0], stork[y][x][1], stork[y][x][2]))
            obj.setDepth(4)
            obj.setBorderWidth(0)
            canvas.add(obj)
            storkObj2.append(obj)

ground = Rectangle(500, 300, Point(250, 350))
ground.setDepth(5)
ground.setFillColor((0, 64, 64))
canvas.add(ground)

grassBack = Polygon(Point(0, 500), *grass(0.075, 0, 500, 500, 425), Point(500, 500))
grassBack.setFillColor((127, 127, 0))
grassBack.setDepth(2)
canvas.add(grassBack)

grassFront = Polygon(Point(0, 500), *grass(0.3, 0, 500, 500, 450), Point(500, 500))
grassFront.setFillColor((255, 255, 0))
grassFront.setDepth(1)
canvas.add(grassFront)

for i in range(2):
    rand = random()
    for obj in storkObj:
        obj.move(-10*rand, 0)
    rand = random()
    for obj in storkObj2:
        obj.move(10*rand, 0)
canvas.clear()

message = "The Lion King"
fontSize = 40
text = Text(message, fontSize, Point(250, 250))
text.setFontColor((0, 0, 0))
text.setDepth(0)
canvas.add(text)

path = Path(Point(250-len(message)*5-fontSize*2, 250+fontSize/2), Point(250+len(message)*5+fontSize*2, 250+fontSize/2))
path.setBorderColor((0, 0, 0))
path.setBorderWidth(2)
path.setDepth(0)
canvas.add(path)

sleep(1.5)
canvas.close()
